{
  "sessionId": "claude-1756485863981-x7dqpcvrn",
  "timestamp": "2025-08-29T16:43:51.535Z",
  "mode": "RESUME_SESSION",
  "handoffData": {
    "sessionId": "claude-1756485361374-zz04f8v6d",
    "timestamp": "2025-08-29T16:36:01.374Z",
    "tokenWarning": true,
    "handoffReason": "Claude approaching token limit",
    "activeTask": {
      "description": "Fixing test failures",
      "priority": "high",
      "filesInvolved": [
        "CLAUDE.md",
        "docs/02-api/generated/classes/classes_Magnet.Magnet.html",
        "docs/02-api/generated/classes/classes_Magnet.MagnetManager.html",
        "docs/02-api/generated/classes/components_common_ErrorBoundary.default.html",
        "docs/02-api/generated/classes/services_DatabaseService.DatabaseService.html"
      ],
      "estimatedTimeRemaining": "30-60 minutes"
    },
    "sessionProgress": {
      "completed": [
        "✅ Added null check for assignments filter",
        "✅ Added missing getDropRules and helper methods",
        "✅ Fixed test context mocks and imports",
        "✅ Created safer database migration script"
      ],
      "inProgress": [
        "Working on: .claude/settings.local.json, .husky/pre-commit, docs/ai-context/api.aimd, docs/ai-context/business-logic.aimd, docs/ai-context/components.aimd, package.json, scripts/claude-handoff.js"
      ],
      "notStarted": [
        "Apply database migration (critical blocker)"
      ]
    },
    "currentState": {
      "git": {
        "branch": "main",
        "hasChanges": true,
        "uncommittedFiles": [
          ".claude/settings.local.json",
          ".husky/pre-commit",
          "docs/ai-context/api.aimd",
          "docs/ai-context/business-logic.aimd",
          "docs/ai-context/components.aimd",
          "package.json",
          "scripts/claude-handoff.js"
        ],
        "unpushedCommits": [],
        "lastCommit": "e477a85 fix: enhance available jobs panel visibility and sizing",
        "status": "M .claude/settings.local.json\n M .husky/pre-commit\n M docs/ai-context/api.aimd\n M docs/ai-context/business-logic.aimd\n M docs/ai-context/components.aimd\n M package.json\n M scripts/claude-handoff.js\n?? AI_CONTEXT.json\n?? AI_CONTEXT_MEMORY.json\n?? nul\n?? scripts/ai-context-agent.js\n?? scripts/collectors/\n?? scripts/generate-ai-context.js\n?? scripts/update-ai-context.js\n?? vite.config.ts.timestamp-1756473652157-e2cddc7204ea.mjs"
      },
      "tests": {
        "passing": 0,
        "failing": 0,
        "total": 0,
        "coverage": 0,
        "failures": [],
        "success": false
      },
      "lint": {
        "total": 552,
        "errors": 534,
        "warnings": 18,
        "issues": [
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 1,
            "message": "'test' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 1,
            "message": "'expect' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 3,
            "message": "'TestDataFactory' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 4,
            "message": "'SchedulerPage' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 5,
            "message": "'MagnetPage' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 202,
            "message": "'scenario' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 219,
            "message": "'scenario' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 234,
            "message": "'scenario' is defined but never used.",
            "severity": "error",
            "rule": "@typescript-eslint/no-unused-vars"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 299,
            "message": "Unexpected any. Specify a different type.",
            "severity": "error",
            "rule": "@typescript-eslint/no-explicit-any"
          },
          {
            "file": "\\playwright\\generators\\test-generator.ts",
            "line": 376,
            "message": "A `require()` style import is forbidden.",
            "severity": "error",
            "rule": "@typescript-eslint/no-require-imports"
          }
        ]
      },
      "server": {
        "devServerRunning": true,
        "port": 5173
      },
      "critical": [
        {
          "type": "lint_errors",
          "severity": "medium",
          "message": "534 ESLint errors",
          "impact": "Code quality issues",
          "files": [
            "\\playwright\\generators\\test-generator.ts",
            "\\playwright\\generators\\test-generator.ts",
            "\\playwright\\generators\\test-generator.ts"
          ]
        },
        {
          "type": "uncommitted_changes",
          "severity": "low",
          "message": "7 uncommitted files",
          "impact": "Risk of losing work",
          "files": [
            ".claude/settings.local.json",
            ".husky/pre-commit",
            "docs/ai-context/api.aimd"
          ]
        }
      ]
    },
    "codeContext": {
      "modifiedFiles": [
        ".claude/settings.local.json",
        ".husky/pre-commit",
        "docs/ai-context/api.aimd",
        "docs/ai-context/business-logic.aimd",
        "docs/ai-context/components.aimd",
        "package.json",
        "scripts/claude-handoff.js"
      ],
      "criticalFileContents": {
        "package.json": "{\n  \"name\": \"construction-scheduler\",\n  \"private\": true,\n  \"version\": \"0.1.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"dev:docs\": \"concurrently \\\"vite\\\" \\\"npm run docs:watch\\\"\",\n    \"build\": \"vite build\",\n    \"lint\": \"eslint .\",\n    \"preview\": \"vite preview\",\n    \"test\": \"vitest\",\n    \"test:e2e\": \"playwright test\",\n    \"test:e2e:ui\": \"playwright test --ui\",\n    \"test:e2e:debug\": \"playwright test --debug\",\n    \"test:e2e:headed\": \"playwright test --headed\",\n    \"test:e2e:chrome\": \"playwright test --project=chromium\",\n    \"test:e2e:firefox\": \"playwright test --project=firefox\",\n    \"test:e2e:webkit\": \"playwright test --project=webkit\",\n    \"test:e2e:mobile\": \"playwright test --project='Mobile Chrome' --project='Mobile Safari'\",\n    \"test:e2e:generate\": \"node scripts/generate-dynamic-tests.js\",\n    \"test:e2e:watch\": \"node scripts/watch-rules.js\",\n    \"test:e2e:update-snapshots\": \"playwright test --update-snapshots\",\n    \"test:e2e:report\": \"playwright show-report\",\n    \"test:all\": \"npm run test && npm run test:e2e\",\n    \"playwright:install\": \"playwright install\",\n    \"playwright:codegen\": \"playwright codegen http://localhost:5173\",\n    \"docs:generate\": \"node scripts/generate-docs.cjs\",\n    \"docs:watch\": \"node scripts/generate-docs.cjs --watch\",\n    \"docs:api\": \"typedoc\",\n    \"docs:build\": \"npm run docs:generate && npm run docs:api\",\n    \"docs:ai-context\": \"node scripts/update-ai-context.js\",\n    \"commit\": \"node scripts/auto-commit.js\",\n    \"save\": \"node scripts/quick-save.js\",\n    \"qs\": \"node scripts/quick-save.js\",\n    \"claude:start\": \"node scripts/claude-smart-start.js\",\n    \"claude:handoff\": \"node scripts/claude-handoff.js\",\n    \"claude:status\": \"node scripts/claude-status.js\",\n    \"claude:reset\": \"node scripts/claude-reset.js\",\n    \"claude:history\": \"node scripts/claude-history.js\",\n    \"setup:claude\": \"node scripts/setup-claude.js\",\n    \"ai:context\": \"node scripts/ai-context-agent.js\",\n    \"ai:context:verbose\": \"node scripts/ai-context-agent.js --verbose\",\n    \"ai:context:watch\": \"node scripts/ai-context-agent.js --watch\",\n    \"ai:context:analyze\": \"node scripts/ai-context-agent.js --analyze --verbose\",\n    \"claude:resume\": \"node scripts/claude-resume.js\",\n    \"claude:session\": \"node scripts/claude-session.js\",\n    \"migration:check\": \"node scripts/check-migration.js\",\n    \"migration:test\": \"node scripts/test-migration.js\",\n    \"docs:export\": \"node scripts/export-docs-system.cjs\",\n    \"ai:generate\": \"node scripts/generate-ai-context.js\",\n    \"claude:update\": \"node scripts/update-claude-md.js\",\n    \"claude:memory\": \"node scripts/update-claude-memory.cjs\",\n    \"prepare\": \"husky\"\n  },\n  \"dependencies\": {\n    \"@supabase/supabase-js\": \"^2.56.0\",\n    \"@use-gesture/react\": \"^10.3.1\",\n    \"framer-motion\": \"^11.0.5\",\n    \"immer\": \"^10.1.1\",\n    \"lucide-react\": \"^0.344.0\",\n    \"react\": \"^18.3.1\",\n    \"react-dnd\": \"^16.0.1\",\n    \"react-dnd-html5-backend\": \"^16.0.1\",\n    \"react-dnd-multi-backend\": \"^9.0.0\",\n    \"react-dnd-touch-backend\": \"^16.0.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"uuid\": \"^9.0.1\",\n    \"zustand\": \"^5.0.7\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^19.8.1\",\n    \"@commitlint/config-conventional\": \"^19.8.1\",\n    \"@eslint/js\": \"^9.9.1\",\n    \"@playwright/test\": \"^1.55.0\",\n    \"@testing-library/jest-dom\": \"^6.2.1\",\n    \"@testing-library/react\": \"^14.2.1\",\n    \"@testing-library/user-event\": \"^14.4.3\",\n    \"@types/node\": \"^24.3.0\",\n    \"@types/react\": \"^18.3.5\",\n    \"@types/react-dom\": \"^18.3.0\",\n    \"@types/typescript\": \"^0.4.29\",\n    \"@types/uuid\": \"^9.0.8\",\n    \"@vitejs/plugin-react\": \"^4.3.1\",\n    \"autoprefixer\": \"^10.4.18\",\n    \"chokidar\": \"^4.0.3\",\n    \"concurrently\": \"^9.2.1\",\n    \"eslint\": \"^9.9.1\",\n    \"eslint-plugin-react-hooks\": \"^5.1.0-rc.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.11\",\n    \"globals\": \"^15.9.0\",\n    \"husky\": \"^9.1.7\",\n    \"jsdom\": \"^23.2.0\",\n    \"nodemon\": \"^3.1.10\",\n    \"postcss\": \"^8.4.35\",\n    \"react-dnd-test-backend\": \"^16.0.1\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"typedoc\": \"^0.28.11\",\n    \"typescript\": \"^5.9.2\",\n    \"typescript-eslint\": \"^8.3.0\",\n    \"vite\": \"^5.4.2\",\n    \"vitest\": \"^1.6.0\"\n  }\n}"
      },
      "currentPatches": "diff --git a/.claude/settings.local.json b/.claude/settings.local.json\nindex 4a5f77a..7cc340d 100644\n--- a/.claude/settings.local.json\n+++ b/.claude/settings.local.json\n@@ -30,7 +30,8 @@\n       \"Bash(set VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxYmdjZmRveW5kb2N1b21udGR4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU4ODQxMzMsImV4cCI6MjA3MTQ2MDEzM30.fUM25Cb_uWkJJ75Dw_uZVPn9qzZ-7z5o2zOq8jkQ0d8)\",\n       \"Bash(npx playwright test:*)\",\n       \"Bash(pkill:*)\",\n-      \"Bash(npx husky init:*)\"\n+      \"Bash(npx husky init:*)\",\n+      \"Bash(git stash:*)\"\n     ],\n     \"deny\": [],\n     \"ask\": []\ndiff --git a/.husky/pre-commit b/.husky/pre-commit\nindex 43c085c..bcdd16e 100644\n--- a/.husky/pre-commit\n+++ b/.husky/pre-commit\n@@ -6,6 +6,10 @@ node scripts/update-claude-md.js\n # Add the updated CLAUDE.md to the commit\n git add CLAUDE.md\n \n+# Update AI context documentation\n+npm run docs:ai-context --silent\n+git add docs/ai-context/\n+\n # Generate documentation (optional - comment out if too slow)\n # npm run docs:generate --silent\n # git add docs/\ndiff --git a/docs/ai-context/api.aimd b/docs/ai-context/api.aimd\nindex 0f8133d..9944028 100644\n--- a/docs/ai-context/api.aimd\n+++ b/docs/ai-context/api.aimd\n@@ -1 +1,272 @@\n-API_CONTEXT: Generated from services\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Total Files: 92 -->\n+<!-- Services: 4 -->\n+<!-- Utilities: 12 -->\n+<!-- Hooks: 2 -->\n+<!-- END METADATA -->\n+\n+# API Context for BoardOS Construction Scheduler\n+\n+## Services\n+\n+### DatabaseService\n+**File**: `src/services/DatabaseService.ts`\n+**Description**: Complete database service for Supabase integration with real-time updates\n+\n+#### Key Methods:\n+- `transformDbEmployee(dbEmployee: any): Employee` - Transform database employee data\n+- `transformDbEquipment(dbEquipment: any): Equipment` - Transform database equipment data\n+- `transformDbResource(dbResource: DbResource): Resource` - Transform database resource data\n+- `transformDbJob(dbJob: DbJob): Job` - Transform database job data\n+- `transformDbAssignment(dbAssignment: DbAssignment): Assignment` - Transform database assignment data\n+\n+#### Database Operations:\n+- `getAllScheduleData()` - Load complete schedule data (resources, jobs, assignments, rules)\n+- `getJobsByDate(date: Date): Promise<Job[]>` - Get jobs for specific date\n+- `getJobsByDateRange(startDate: Date, endDate: Date): Promise<Job[]>` - Get jobs in date range\n+- `updateJobDate(jobId: string, newDate: Date, userId?: string): Promise<void>` - Update job schedule date\n+\n+#### CRUD Operations:\n+**Resources:**\n+- `createResource(resource: Omit<Resource, 'id'>): Promise<Resource>`\n+- `updateResource(resource: Resource): Promise<Resource>`\n+- `deleteResource(id: string): Promise<void>`\n+\n+**Jobs:**\n+- `createJob(job: Omit<Job, 'id'>): Promise<Job>`\n+- `updateJob(job: Job): Promise<Job>`\n+- `deleteJob(id: string): Promise<void>`\n+\n+**Assignments:**\n+- `createAssignment(assignment: Omit<Assignment, 'id' | 'attachments'>): Promise<Assignment>`\n+- `updateAssignment(assignment: Assignment): Promise<Assignment>`\n+- `deleteAssignment(id: string): Promise<void>`\n+- `assignResource(resourceId: string, jobId: string, row: RowType): Promise<Assignment>`\n+- `attachResources(sourceAssignmentId: string, targetAssignmentId: string): Promise<void>`\n+\n+#### Real-time Subscriptions:\n+- `subscribeToScheduleChanges(callbacks)` - Setup real-time listeners for all table changes\n+  - Resources, Jobs, Assignments, Rules, Drop Rules, Job Row Configs, Truck Driver Assignments\n+\n+#### Rule Management:\n+- `updateMagnetRule(rule: MagnetInteractionRule): Promise<void>`\n+- `updateDropRule(rowType: RowType, allowedTypes: ResourceType[]): Promise<void>`\n+- `getMagnetInteractionRules(): Promise<MagnetInteractionRule[]>`\n+- `getDropRules(): Promise<DropRule[]>`\n+\n+### DurationEstimationService\n+**File**: `src/services/DurationEstimationService.ts`\n+**Description**: Calculate job durations based on type and scope\n+\n+#### Production Rates (per day):\n+- Milling: 22,000 sq yards\n+- Paving Highway: 2,000 tons\n+- Paving Parking Lot: 800 tons\n+- Paving Residential: 1,500 tons\n+- Excavation: 150 cubic yards\n+- Drainage: 300 linear feet\n+- Concrete: 50 cubic yards\n+\n+#### Key Methods:\n+- `estimateMillingDays(sqYards: number, complexity: number = 1.0): number`\n+- `estimatePavingDays(tons: number, jobCategory: Job['job_category'], complexity: number = 1.0): number`\n+- `estimateExcavationDays(cubicYards: number, complexity: number = 1.0): number`\n+- `estimateDrainageDays(linearFeet: number, complexity: number = 1.0): number`\n+- `estimateConcreteDays(cubicYards: number, complexity: number = 1.0): number`\n+- `calculateJobDuration(job: Partial<Job>): JobEstimate`\n+- `generateJobPhases(job: Partial<Job>, startDate: string): JobPhase[]`\n+- `calculateEndDate(startDate: string, totalDays: number): string`\n+\n+### ExportService\n+**File**: `src/services/ExportService.ts`\n+**Description**: Export schedule data to various formats (CSV, Excel, PDF)\n+\n+### TestDatabaseService\n+**File**: `src/services/TestDatabaseService.ts`\n+**Description**: Testing utilities and auto-test generation for database operations\n+\n+## Hooks\n+\n+### useScheduler\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Main context hook for schedule state management\n+\n+#### State:\n+- `jobs: Job[]` - All scheduled jobs\n+- `resources: Resource[]` - Available resources (equipment, personnel)\n+- `assignments: Assignment[]` - Resource-to-job mappings\n+- `selectedDate: Date` - Currently selected date\n+- `currentView: ViewType` - Current calendar view (day, week, month)\n+- `filteredResourceType: string | null` - Resource type filter\n+- `searchTerm: string` - Search filter\n+- `truckDriverAssignments: Record<string, string>` - Truck-driver mappings\n+- `magnetInteractionRules: MagnetInteractionRule[]` - Attachment rules\n+- `dropRules: DropRule[]` - Drag-drop permissions\n+- `jobRowConfigs: JobRowConfig[]` - Job layout configurations\n+- `isLoading: boolean` - Loading state\n+- `error: string | null` - Error state\n+\n+#### Job Actions:\n+- `addJob(job: Omit<Job, 'id'>): Promise<void>`\n+- `updateJob(job: Job): Promise<void>`\n+- `removeJob(jobId: string): Promise<void>`\n+- `finalizeJob(jobId: string): Promise<void>`\n+- `unfinalizeJob(jobId: string): Promise<void>`\n+\n+#### Resource Actions:\n+- `addResource(resource: Omit<Resource, 'id'>): Promise<void>`\n+- `updateResource(resource: Resource): Promise<void>`\n+- `removeResource(resourceId: string): Promise<void>`\n+- `toggleResourceOnSite(resourceId: string): Promise<void>`\n+\n+#### Assignment Actions:\n+- `assignResource(resourceId: string, jobId: string, row: RowType, position?: number): Promise<string>`\n+- `assignResourceWithTruckConfig(resourceId: string, jobId: string, row: RowType, truckConfig?: 'flowboy' | 'dump-trailer', position?: number, isSecondShift?: boolean): Promise<string>`\n+- `updateAssignment(assignment: Assignment): Promise<void>`\n+- `removeAssignment(assignmentId: string): Promise<void>`\n+- `attachResources(targetId: string, sourceId: string): Promise<void>`\n+- `detachResources(assignmentId: string): Promise<void>`\n+- `updateTimeSlot(assignmentId: string, timeSlot: TimeSlot): Promise<void>`\n+- `updateAssignmentNote(assignmentId: string, note: string): Promise<void>`\n+\n+### useMagnet\n+**File**: `src/hooks/useMagnet.ts`\n+**Description**: Magnetic attachment system for drag-and-drop operations\n+\n+#### Methods:\n+- `useMagnet()` - Hook for single magnet operations\n+- `useMagnets()` - Hook for multiple magnet operations\n+\n+### useOptimizedScheduler\n+**File**: `src/hooks/useOptimizedScheduler.ts`\n+**Description**: Performance-optimized schedule operations\n+\n+#### Methods:\n+- `useJobData()` - Optimized job data loading\n+- `useResourcePool()` - Optimized resource pool management\n+- `useOptimizedScheduler()` - Main optimized scheduler hook\n+\n+## Utilities\n+\n+### attachmentRules\n+**File**: `src/utils/attachmentRules.ts`\n+**Description**: Equipment-operator attachment logic and validation\n+\n+#### Core Functions:\n+- `canAttach(sourceType: ResourceType, targetType: ResourceType): boolean`\n+- `getMaxAttachments(targetType: ResourceType, sourceType: ResourceType): number`\n+- `getRequiredAttachments(targetType: ResourceType): ResourceType[]`\n+- `getRequiredSkills(sourceType: ResourceType, targetType: ResourceType): string[]`\n+- `getValidAttachmentTypes(targetType: ResourceType): ResourceType[]`\n+- `hasRequiredAttachments(assignment: Assignment, allAssignments: Assignment[]): boolean`\n+- `validateAttachmentGroup(assignments: Assignment[]): boolean`\n+\n+#### Attachment Rules:\n+- **Pavers**: Require 1 operator, allow up to 2 screwmen\n+- **General Equipment**: Require 1 operator each (roller, excavator, sweeper, etc.)\n+- **Trucks**: Require 1 driver each\n+- **Milling Machines**: Can have 1 groundman\n+\n+### colorSystem\n+**File**: `src/utils/colorSystem.ts`\n+**Description**: Resource styling and shift indicators\n+\n+#### Functions:\n+- `getResourceStyle(resource: Resource): string` - Get resource background/text colors\n+- `getResourceBorder(resource: Resource): string` - Get resource border style\n+- `getShiftStatusBorder(assignments: Assignment[]): string` - Get shift status indicators\n+- `getCompleteBorderStyle(resource: Resource, assignments: Assignment[]): string`\n+- `getLegacyResourceColors(resourceType: ResourceType): object`\n+\n+#### Color Scheme:\n+- **Equipment**: Yellow background (`bg-yellow-500`), black text, yellow border (`border-yellow-700`)\n+- **Personnel**: Various colors based on role\n+- **Shift Indicators**:\n+  - Red border: Double shift (day + night)\n+  - Teal border: Multiple day jobs\n+  - Orange border: Night shift only\n+\n+### timeConflictDetection\n+**File**: `src/utils/timeConflictDetection.ts`\n+**Description**: Overlap detection and resolution for resource scheduling\n+\n+#### Functions:\n+- `detectTimeConflicts(assignments: Assignment[]): TimeConflict[]`\n+- `detectAllTimeConflicts(assignments: Assignment[], resources: Resource[]): TimeConflict[]`\n+- `doTimeSlotsOverlap(slot1: TimeSlot, slot2: TimeSlot): boolean`\n+- `getOverlapPeriod(slot1: TimeSlot, slot2: TimeSlot): TimeSlot | null`\n+- `validateTimeSlotAssignment(assignment: Assignment, allAssignments: Assignment[]): boolean`\n+- `autoResolveConflicts(conflicts: TimeConflict[]): Assignment[]`\n+\n+### ruleCreator\n+**File**: `src/utils/ruleCreator.ts`\n+**Description**: Generate magnet and drop rules for different job types\n+\n+#### Functions:\n+- `createMagnetRules(): MagnetInteractionRule[]`\n+- `createEnhancedMagnetRules(): MagnetInteractionRule[]`\n+- `createAdvancedMagnetRules(): MagnetInteractionRule[]`\n+- `createDropRules(): DropRule[]`\n+- `buildStandardConstructionRules(): MagnetInteractionRule[]`\n+- `buildStandardDropRules(): DropRule[]`\n+\n+### jobUtils\n+**File**: `src/utils/jobUtils.ts`\n+**Description**: Job type recommendations and validations\n+\n+#### Functions:\n+- `getRecommendedEquipment(jobType: Job['type']): ResourceType[]`\n+- `isRowNeededForJobType(rowType: RowType, jobType: Job['type']): boolean`\n+- `isRowTogglable(rowType: RowType, jobType: Job['type']): boolean`\n+\n+## Context Providers\n+\n+### SchedulerContext\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Global schedule state management with optimistic updates\n+\n+### DragContext\n+**File**: `src/context/DragContext.tsx`\n+**Description**: Drag-and-drop state management for resource assignments\n+\n+### MobileContext\n+**File**: `src/context/MobileContext.tsx`\n+**Description**: Mobile device detection and responsive behavior\n+\n+### ModalContext\n+**File**: `src/context/ModalContext.tsx`\n+**Description**: Modal state management for dialogs and overlays\n+\n+### KeyboardShortcutsContext\n+**File**: `src/context/KeyboardShortcutsContext.tsx`\n+**Description**: Keyboard shortcuts and hotkey management\n+\n+## Types\n+\n+### Core Types:\n+- `Resource` - Equipment, vehicles, and personnel\n+- `Job` - Construction projects with shifts\n+- `Assignment` - Resource-to-job mappings with attachments\n+- `TimeSlot` - Time periods for assignments\n+- `MagnetInteractionRule` - Attachment rules between resources\n+- `DropRule` - Drag-drop permissions for job rows\n+- `JobRowConfig` - Dynamic job layout configurations\n+\n+### Enums:\n+- `ResourceType` - All resource categories (operator, driver, truck, paver, etc.)\n+- `RowType` - Job row types (Foreman, Equipment, Crew, Trucks, etc.)\n+- `ViewType` - Calendar views (day, week, month)\n+\n+## Real-time Features\n+\n+### Supabase Integration:\n+- Real-time subscriptions for all database tables\n+- Optimistic UI updates for immediate feedback\n+- Automatic conflict resolution and sync\n+\n+### Performance Optimizations:\n+- Memoized data filtering and sorting\n+- Virtual scrolling for large datasets\n+- Debounced search and filter operations\n+- Background data prefetching\n\\ No newline at end of file\ndiff --git a/docs/ai-context/business-logic.aimd b/docs/ai-context/business-logic.aimd\nindex b3f7e5a..17418ab 100644\n--- a/docs/ai-context/business-logic.aimd\n+++ b/docs/ai-context/business-logic.aimd\n@@ -1 +1,255 @@\n-BUSINESS_CONTEXT: Generated from business logic\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Business Logic Files: 12 -->\n+<!-- END METADATA -->\n+\n+# Business Logic Context for BoardOS Construction Scheduler\n+\n+## Resource Attachment Rules\n+\n+### Safety Requirements (Mandatory Attachments)\n+**File**: `src/utils/attachmentRules.ts`\n+\n+#### Equipment Safety Rules:\n+- **All Equipment MUST have operators** (safety requirement)\n+  - Pavers: 1 operator required\n+  - Rollers: 1 operator required  \n+  - Excavators: 1 operator required\n+  - Sweepers: 1 operator required\n+  - Milling Machines: 1 operator required\n+  - Dozers: 1 operator required\n+  - Payloaders: 1 operator required\n+  - Skidsteers: 1 operator required\n+\n+#### Vehicle Requirements:\n+- **All Trucks MUST have drivers** (mandatory)\n+  - Maximum 1 driver per truck\n+  - Optional: 1 laborer per truck\n+\n+#### Specialized Equipment Rules:\n+- **Pavers**:\n+  - Required: 1 operator\n+  - Optional: Up to 2 laborers with screwman skills\n+- **Milling Machines**:\n+  - Required: 1 operator\n+  - Optional: 1 groundman\n+\n+### Attachment Validation Functions:\n+- `canAttach(sourceType, targetType): boolean` - Check if attachment is allowed\n+- `getRequiredAttachments(type): ResourceType[]` - Get mandatory attachments\n+- `getMaxAttachments(sourceType, targetType): number` - Get attachment limits\n+- `hasRequiredAttachments(type, attachedTypes): boolean` - Validate requirements\n+- `validateAttachmentGroup(mainType, attachedTypes)` - Complete validation\n+\n+## Shift Management System\n+\n+### Shift Types:\n+1. **Day Shift** (default): Regular daytime operations\n+2. **Night Shift** (secondary): Nighttime operations with Ctrl+drag\n+\n+### Multi-Shift Assignment Logic:\n+- **Normal Drag**: Move assignment (removes from original)\n+- **Ctrl+Drag**: Create second shift assignment (keeps original)\n+- **Drag Off Job**: Remove assignment completely\n+\n+### Time Conflict Detection:\n+**File**: `src/utils/timeConflictDetection.ts`\n+\n+#### Conflict Types:\n+- **Double Shift**: Same resource on day AND night shift\n+- **Overlapping Times**: Time slot conflicts within same shift\n+- **Multiple Day Jobs**: Same resource on multiple day jobs\n+\n+#### Validation Functions:\n+- `detectTimeConflicts(assignments): TimeConflict[]`\n+- `detectAllTimeConflicts(assignments, resources): TimeConflict[]`\n+- `doTimeSlotsOverlap(slot1, slot2): boolean`\n+- `validateTimeSlotAssignment(assignment, allAssignments): boolean`\n+- `autoResolveConflicts(conflicts): Assignment[]`\n+\n+## Visual Indicators System\n+\n+### Border Color Coding:\n+**File**: `src/utils/colorSystem.ts`\n+\n+#### Shift Status Borders:\n+- **Red Border (`border-red-500`)**: Double shift (day + night)\n+- **Teal Border (`border-teal-500`)**: Multiple day jobs\n+- **Orange Border (`border-orange-500`)**: Night shift only\n+- **Default Border**: Single assignment or unassigned\n+\n+#### Resource Type Colors:\n+- **Equipment**: Yellow background (`bg-yellow-500`), black text, yellow border (`border-yellow-700`)\n+- **Personnel**: \n+  - Operators: White background, black text\n+  - Drivers: Green background (`bg-green-500`), black text\n+  - Stripers: Blue background (`bg-blue-500`), white text\n+  - Foremen: Orange background (`bg-orange-500`), black text\n+  - Laborers: White background, green text\n+- **Trucks**: Black background (`bg-black`), white text\n+\n+#### Priority System:\n+1. **Highest**: Red border (double shift)\n+2. **Medium**: Teal border (multiple day jobs)\n+3. **Low**: Orange border (night only)\n+4. **Default**: Resource type border\n+\n+### Time Badge Colors:\n+- **Green Badge**: On-site arrival time\n+- **Blue Badge**: Yard departure time\n+\n+## Job Organization Rules\n+\n+### Row Type System:\n+**File**: `src/utils/jobUtils.ts`\n+\n+#### Standard Row Types:\n+1. **Foreman**: Only foremen allowed\n+2. **Equipment**: Equipment + required operators\n+3. **Crew**: All personnel types allowed\n+4. **Trucks**: Trucks + required drivers\n+5. **Sweeper**: Sweepers + operators (specialized)\n+6. **Tack**: Tack-specific operations\n+7. **MPT**: MPT-specific operations\n+\n+#### Job Type Recommendations:\n+- `getRecommendedEquipment(jobType): ResourceType[]`\n+- `isRowNeededForJobType(rowType, jobType): boolean`\n+- `isRowTogglable(rowType, jobType): boolean`\n+\n+### Row Visibility Rules:\n+- **Milling Jobs**: Show Equipment, Crew, Trucks rows\n+- **Paving Jobs**: Show Equipment, Crew, Trucks, Sweeper rows\n+- **Both Jobs**: Show all row types\n+- **Custom Jobs**: Configurable via JobRowConfig\n+\n+## Magnet Interaction System\n+\n+### Auto-Attachment Rules:\n+**File**: `src/utils/ruleCreator.ts`\n+\n+#### Magnet Behavior:\n+- **Equipment dropped on job**: Automatically creates operator requirement\n+- **Operator dragged near equipment**: Auto-attaches if compatible\n+- **Multiple compatible operators**: Shows selection dialog\n+- **Invalid attachments**: Prevented with visual feedback\n+\n+#### Rule Generation:\n+- `createMagnetRules(): MagnetInteractionRule[]`\n+- `createEnhancedMagnetRules(): MagnetInteractionRule[]`\n+- `buildStandardConstructionRules(): MagnetInteractionRule[]`\n+\n+### Drop Permission Rules:\n+**File**: `src/utils/ruleCreator.ts`\n+\n+#### Row-Based Permissions:\n+- **Foreman Row**: Only foremen can be dropped\n+- **Equipment Row**: Only equipment + operators\n+- **Crew Row**: All personnel types\n+- **Truck Row**: Only trucks + drivers\n+\n+#### Functions:\n+- `createDropRules(): DropRule[]`\n+- `buildStandardDropRules(): DropRule[]`\n+\n+## Duration Estimation Logic\n+\n+### Production Rates (per day):\n+**File**: `src/services/DurationEstimationService.ts`\n+\n+#### Base Rates:\n+- **Milling**: 22,000 sq yards/day\n+- **Paving Highway**: 2,000 tons/day\n+- **Paving Parking Lot**: 800 tons/day (slower due to complexity)\n+- **Paving Residential**: 1,500 tons/day\n+- **Excavation**: 150 cubic yards/day\n+- **Drainage**: 300 linear feet/day\n+- **Concrete**: 50 cubic yards/day\n+\n+#### Complexity Factors:\n+- **Base**: 1.0 (normal conditions)\n+- **Complex**: 1.5+ (difficult terrain, tight spaces)\n+- **Simple**: 0.8 (ideal conditions)\n+\n+### Job Phase Logic:\n+1. **Milling Only**: Single phase\n+2. **Paving Only**: Single phase\n+3. **Both (Mill & Pave)**: Sequential phases (mill first, then pave)\n+4. **Drainage**: Three phases (excavation → drainage → concrete)\n+\n+## Business Rules Validation\n+\n+### Pre-Assignment Checks:\n+1. **Resource Availability**: Not already assigned to conflicting job\n+2. **Skill Requirements**: Personnel has required certifications\n+3. **Equipment Status**: Equipment is operational and on-site\n+4. **Time Conflicts**: No overlapping time slots\n+\n+### Post-Assignment Validation:\n+1. **Safety Compliance**: All equipment has required operators\n+2. **Attachment Limits**: No more than max allowed attachments\n+3. **Job Requirements**: All required resources are assigned\n+\n+### Finalization Rules:\n+- Jobs cannot be finalized without required resources\n+- Finalized jobs cannot be modified without unfinalizing\n+- Time changes trigger conflict re-validation\n+\n+## Optimistic Updates Pattern\n+\n+### Update Flow:\n+1. **Immediate UI Update**: Show change instantly\n+2. **Database Operation**: Send to Supabase\n+3. **Real-time Confirmation**: Receive confirmation via subscription\n+4. **Error Recovery**: Revert UI if operation fails\n+\n+### Implementation Pattern:\n+```typescript\n+// Optimistic update\n+setAssignments(prev => {\n+  return prev.map(assignment => \n+    assignment.id === targetId \n+      ? { ...assignment, /* updated fields */ }\n+      : assignment\n+  );\n+});\n+\n+// Database operation\n+try {\n+  await DatabaseService.updateAssignment(updatedAssignment);\n+} catch (error) {\n+  // Revert on error\n+  await loadScheduleData(false);\n+}\n+```\n+\n+## Real-time Synchronization Rules\n+\n+### Conflict Resolution Priority:\n+1. **Server State**: Always authoritative\n+2. **Timestamp**: Later changes win\n+3. **User Context**: Prefer current user's changes\n+4. **Manual Resolution**: Show conflict dialog for complex cases\n+\n+### Subscription Handling:\n+- **Resource Changes**: Update resource pool immediately\n+- **Job Changes**: Refresh job columns\n+- **Assignment Changes**: Update cards with animation\n+- **Rule Changes**: Refresh validation logic\n+\n+## Data Integrity Rules\n+\n+### Cascade Operations:\n+- **Delete Job**: Remove all assignments\n+- **Delete Resource**: Remove all assignments\n+- **Delete Assignment**: Remove all attachments\n+\n+### Referential Integrity:\n+- Assignments must reference valid jobs and resources\n+- Attachments must reference valid assignments\n+- Time slots must have valid start/end times\n+\n+### Validation Triggers:\n+- **Before Save**: Validate business rules\n+- **After Load**: Validate data consistency  \n+- **Real-time**: Validate concurrent modifications\n\\ No newline at end of file\ndiff --git a/docs/ai-context/components.aimd b/docs/ai-context/components.aimd\nindex 015dfa7..082a007 100644\n--- a/docs/ai-context/components.aimd\n+++ b/docs/ai-context/components.aimd\n@@ -1 +1,494 @@\n-COMPONENT_CONTEXT: Generated from components\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Component Files: 59 -->\n+<!-- END METADATA -->\n+\n+# Components Context for BoardOS Construction Scheduler\n+\n+## Core Scheduling Components\n+\n+### Board\n+**File**: `src/components/board/Board.tsx`\n+**Description**: Main scheduling grid container\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Displays all job columns in a horizontal scrollable layout\n+- Shows loading indicator during database sync\n+- Contains \"Add New Job\" button\n+- Wraps content in ErrorBoundary\n+- Responsive design with min-width constraints\n+\n+#### Context Dependencies:\n+- `useScheduler()` - Access jobs and loading state\n+- `useModal()` - Handle modal management\n+\n+### JobColumn\n+**File**: `src/components/board/JobColumn.tsx`\n+**Description**: Individual job column with resource assignments\n+\n+#### Props:\n+- `job: Job` - Job data to display\n+\n+#### Key Features:\n+- Displays job header with name, type, and status\n+- Contains JobRow components for different resource types\n+- Shows job finalization status\n+- Handles job-level drag and drop operations\n+- Responsive column width (typically 256px)\n+\n+### JobRow\n+**File**: `src/components/board/JobRow.tsx`\n+**Description**: Row container for specific resource types within a job\n+\n+#### Props:\n+- `job: Job` - Parent job\n+- `rowType: RowType` - Type of row (Foreman, Equipment, Crew, etc.)\n+- `assignments: Assignment[]` - Assignments for this row\n+\n+#### Key Features:\n+- Drop zone for resource assignments\n+- Visual feedback for valid/invalid drops\n+- Row-specific styling and layout\n+- Assignment card containers\n+\n+### AssignmentCard\n+**File**: `src/components/resources/AssignmentCard.tsx`\n+**Description**: Draggable resource assignment cards\n+\n+#### Props:\n+- `assignment: Assignment` - Assignment data\n+- `attachedAssignments: Assignment[]` - Related attachments\n+- `isDragging?: boolean` - Drag state\n+- `isPreview?: boolean` - Preview mode\n+\n+#### Key Features:\n+- **Drag and Drop**: Draggable resource cards\n+- **Attachment Display**: Shows attached operators/equipment\n+- **Time Indicators**: Color-coded time badges\n+  - Green: On-site time\n+  - Blue: Yard departure time\n+- **Visual States**: Hover, drag, and error states\n+- **Context Menus**: Right-click for options\n+- **Modal Integration**: Opens time/person modals on interaction\n+\n+#### Time Indicator Logic:\n+- Vehicles (trucks/sweepers): Blue if offsite, green if onsite\n+- Personnel: Always green (job site time)\n+- Personnel attached to vehicles: Blue if vehicle offsite\n+\n+### ResourceCard\n+**File**: `src/components/resources/ResourceCard.tsx`\n+**Description**: Resource pool cards for unassigned resources\n+\n+#### Props:\n+- `resource: Resource` - Resource data\n+- `isDragging?: boolean` - Drag state\n+\n+#### Key Features:\n+- Draggable from resource pool\n+- Color-coded by resource type\n+- Shows resource availability status\n+- Quick assignment via drag-and-drop\n+\n+## Calendar View Components\n+\n+### WeekView\n+**File**: `src/components/board/WeekView.tsx`\n+**Description**: Weekly calendar view with job scheduling\n+\n+#### Props:\n+- `selectedDate: Date` - Current week to display\n+\n+#### Key Features:\n+- 7-day horizontal layout\n+- Job bars spanning multiple days\n+- Drag-and-drop for job rescheduling\n+- Day/night shift indicators\n+\n+### MonthView\n+**File**: `src/components/board/MonthView.tsx`\n+**Description**: Monthly calendar overview\n+\n+#### Props:\n+- `selectedDate: Date` - Current month to display\n+\n+#### Key Features:\n+- Calendar grid layout\n+- Job duration estimation\n+- Available jobs sidebar\n+- Month navigation controls\n+\n+### MonthViewJobBar\n+**File**: `src/components/board/MonthViewJobBar.tsx`\n+**Description**: Job representation in monthly view\n+\n+#### Props:\n+- `job: Job` - Job to display\n+- `startDate: Date` - Job start date\n+- `duration: number` - Estimated duration in days\n+\n+#### Key Features:\n+- Spans multiple calendar days\n+- Shows job progress\n+- Click to view details\n+- Color-coded by job type\n+\n+## Modal Components\n+\n+### AddJobModal\n+**File**: `src/components/modals/AddJobModal.tsx`\n+**Description**: Create new job modal\n+\n+#### Props:\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Job creation form\n+- Validation and error handling\n+- Integration with DurationEstimationService\n+\n+### EditJobModal  \n+**File**: `src/components/modals/EditJobModal.tsx`\n+**Description**: Edit existing job modal\n+\n+#### Props:\n+- `job: Job` - Job to edit\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Pre-filled form with job data\n+- Update job properties\n+- Delete job functionality\n+\n+### TimeSlotModal\n+**File**: `src/components/modals/TimeSlotModal.tsx`\n+**Description**: Configure assignment time slots\n+\n+#### Props:\n+- `assignment: Assignment` - Assignment to configure\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Time picker interface\n+- Shift selection (day/night)\n+- Time conflict validation\n+\n+### PersonModal\n+**File**: `src/components/modals/PersonModal.tsx`\n+**Description**: Resource/person details and management\n+\n+#### Props:\n+- `resource: Resource` - Resource to display\n+- `assignment?: Assignment` - Optional assignment context\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Resource information display\n+- Assignment management\n+- Contact information (for personnel)\n+\n+### EquipmentSelectorModal\n+**File**: `src/components/modals/EquipmentSelectorModal.tsx`\n+**Description**: Equipment selection interface\n+\n+#### Props:\n+- `isOpen: boolean` - Modal visibility\n+- `onSelect: (equipment: Resource) => void` - Selection handler\n+- `filterType?: ResourceType` - Equipment type filter\n+\n+#### Key Features:\n+- Filtered equipment list\n+- Search and filter capabilities\n+- Multi-selection support\n+\n+## Mobile Components\n+\n+### MobileSchedulerLayout\n+**File**: `src/components/mobile/MobileSchedulerLayout.tsx`\n+**Description**: Mobile-optimized scheduler layout\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Touch-friendly interface\n+- Swipe navigation\n+- Collapsed sidebar\n+- Mobile-specific drag handling\n+\n+### MobileDragLayer\n+**File**: `src/components/mobile/MobileDragLayer.tsx`\n+**Description**: Custom drag layer for mobile devices\n+\n+#### Props:\n+- `isDragging: boolean` - Drag state\n+- `currentOffset: XYCoord` - Drag position\n+\n+#### Key Features:\n+- Touch-based drag preview\n+- Mobile-specific positioning\n+- Performance optimizations\n+\n+### MobileJobCard\n+**File**: `src/components/mobile/MobileJobCard.tsx`\n+**Description**: Mobile-optimized job display\n+\n+#### Props:\n+- `job: Job` - Job to display\n+\n+#### Key Features:\n+- Compact job representation\n+- Touch interactions\n+- Swipe gestures\n+\n+### MobileResourcePool\n+**File**: `src/components/mobile/MobileResourcePool.tsx`\n+**Description**: Mobile resource selection interface\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Scrollable resource list\n+- Quick assignment buttons\n+- Search and filter\n+\n+## Context Provider Components\n+\n+### SchedulerProvider\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Global schedule state management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Schedule state (jobs, resources, assignments)\n+- CRUD operations\n+- Real-time synchronization\n+- Optimistic updates\n+\n+### DragProvider\n+**File**: `src/context/DragContext.tsx`\n+**Description**: Drag-and-drop state management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Drag state tracking\n+- Drop zone management\n+- Drag preview handling\n+- Mobile drag support\n+\n+### MobileProvider\n+**File**: `src/context/MobileContext.tsx`\n+**Description**: Mobile device detection and handling\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Device detection (mobile/desktop)\n+- Touch event handling\n+- Responsive behavior flags\n+\n+### ModalProvider\n+**File**: `src/context/ModalContext.tsx`\n+**Description**: Modal state and z-index management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Modal stack management\n+- Z-index coordination\n+- Modal state tracking\n+- Backdrop handling\n+\n+## UI Components\n+\n+### QuickSelectOverlay\n+**File**: `src/components/ui/QuickSelectOverlay.tsx`\n+**Description**: Quick resource selection interface\n+\n+#### Props:\n+- `isVisible: boolean` - Overlay visibility\n+- `position: { x: number, y: number }` - Screen position\n+- `onSelect: (resource: Resource) => void` - Selection handler\n+\n+#### Key Features:\n+- Context-aware resource filtering\n+- Keyboard navigation\n+- Quick assignment shortcuts\n+\n+### ViewSwitcher\n+**File**: `src/components/ui/ViewSwitcher.tsx`\n+**Description**: Calendar view selection controls\n+\n+#### Props:\n+- `currentView: ViewType` - Active view\n+- `onViewChange: (view: ViewType) => void` - View change handler\n+\n+#### Key Features:\n+- Day/Week/Month view toggle\n+- Responsive button layout\n+- Keyboard shortcuts\n+\n+### CompactQuickSelect\n+**File**: `src/components/ui/CompactQuickSelect.tsx`\n+**Description**: Compact resource selection widget\n+\n+#### Props:\n+- `resources: Resource[]` - Available resources\n+- `onSelect: (resource: Resource) => void` - Selection handler\n+- `filterType?: ResourceType` - Resource type filter\n+\n+#### Key Features:\n+- Minimal UI footprint\n+- Type-ahead search\n+- Category filtering\n+\n+### DraggableQuickSelectCard\n+**File**: `src/components/ui/DraggableQuickSelectCard.tsx`\n+**Description**: Draggable resource cards for quick assignment\n+\n+#### Props:\n+- `resource: Resource` - Resource data\n+- `category: string` - Resource category\n+\n+#### Key Features:\n+- Drag-and-drop enabled\n+- Category-based styling\n+- Visual feedback on drag\n+\n+## Layout Components\n+\n+### SchedulerLayout\n+**File**: `src/components/layout/SchedulerLayout.tsx`\n+**Description**: Main application layout container\n+\n+#### Props:\n+- `children: React.ReactNode` - Main content\n+\n+#### Key Features:\n+- Sidebar + main content layout\n+- Responsive design\n+- Header and navigation\n+- Context provider wrapping\n+\n+### Sidebar\n+**File**: `src/components/layout/Sidebar.tsx`\n+**Description**: Resource pool and navigation sidebar\n+\n+#### Props:\n+- `isCollapsed?: boolean` - Collapsed state\n+\n+#### Key Features:\n+- Resource pool display\n+- Search and filtering\n+- Category organization\n+- Collapsible design\n+\n+### Navbar\n+**File**: `src/components/layout/Navbar.tsx`\n+**Description**: Top navigation bar\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Date navigation\n+- View controls\n+- User actions\n+- Responsive design\n+\n+## Specialized Components\n+\n+### TruckCard\n+**File**: `src/components/resources/TruckCard.tsx`\n+**Description**: Specialized truck resource card\n+\n+#### Props:\n+- `resource: Resource` - Truck resource\n+- `assignment?: Assignment` - Optional assignment\n+\n+#### Key Features:\n+- Truck-specific information\n+- Driver assignment status\n+- Configuration options (flowboy, dump-trailer)\n+\n+### MagnetCard\n+**File**: `src/components/magnets/MagnetCard.tsx`\n+**Description**: Magnet system visualization card\n+\n+#### Props:\n+- `magnet: Magnet` - Magnet data\n+- `isActive?: boolean` - Active state\n+\n+#### Key Features:\n+- Magnet attachment visualization\n+- Rule configuration interface\n+- Visual connection indicators\n+\n+### AvailableJobsPanel\n+**File**: `src/components/jobs/AvailableJobsPanel.tsx`\n+**Description**: Unscheduled jobs display panel\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- List of available jobs\n+- Job priority indicators\n+- Quick scheduling actions\n+- Drag-and-drop to calendar\n+\n+## Testing and Debug Components\n+\n+### DebugPanel\n+**File**: `src/components/debug/DebugPanel.tsx`\n+**Description**: Development debugging interface\n+\n+#### Props:\n+- `isVisible: boolean` - Panel visibility\n+\n+#### Key Features:\n+- State inspection\n+- Performance metrics\n+- Debug logging controls\n+- Development-only rendering\n+\n+### DatabaseStatus\n+**File**: `src/components/database/DatabaseStatus.tsx`\n+**Description**: Database connection status indicator\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Connection status display\n+- Real-time sync indicators\n+- Error state handling\n+- Retry mechanisms\n+\n+## Component Communication Patterns\n+\n+### Context Usage:\n+- **useScheduler()**: Primary data access\n+- **useDragContext()**: Drag-and-drop coordination  \n+- **useMobile()**: Device-specific behavior\n+- **useModal()**: Modal management\n+\n+### Event Flow:\n+1. **User Interaction** → Component Event Handler\n+2. **Optimistic Update** → Local State Change\n+3. **Database Operation** → Service Layer Call\n+4. **Real-time Sync** → Context Update\n+5. **UI Refresh** → Component Re-render\n+\n+### Props vs Context:\n+- **Props**: Component-specific data and configuration\n+- **Context**: Shared application state and actions\n+- **Local State**: Transient UI state (hover, focus, etc.)\n+\n+### Performance Optimizations:\n+- **React.memo()**: Prevent unnecessary re-renders\n+- **useMemo()**: Expensive calculations\n+- **useCallback()**: Stable function references\n+- **Virtual scrolling**: Large resource lists\n\\ No newline at end of file\ndiff --git a/package.json b/package.json\nindex 42287d2..378b81b 100644\n--- a/package.json\n+++ b/package.json\n@@ -29,6 +29,7 @@\n     \"docs:watch\": \"node scripts/generate-docs.cjs --watch\",\n     \"docs:api\": \"typedoc\",\n     \"docs:build\": \"npm run docs:generate && npm run docs:api\",\n+    \"docs:ai-context\": \"node scripts/update-ai-context.js\",\n     \"commit\": \"node scripts/auto-commit.js\",\n     \"save\": \"node scripts/quick-save.js\",\n     \"qs\": \"node scripts/quick-save.js\",\n@@ -38,6 +39,18 @@\n     \"claude:reset\": \"node scripts/claude-reset.js\",\n     \"claude:history\": \"node scripts/claude-history.js\",\n     \"setup:claude\": \"node scripts/setup-claude.js\",\n+    \"ai:context\": \"node scripts/ai-context-agent.js\",\n+    \"ai:context:verbose\": \"node scripts/ai-context-agent.js --verbose\",\n+    \"ai:context:watch\": \"node scripts/ai-context-agent.js --watch\",\n+    \"ai:context:analyze\": \"node scripts/ai-context-agent.js --analyze --verbose\",\n+    \"claude:resume\": \"node scripts/claude-resume.js\",\n+    \"claude:session\": \"node scripts/claude-session.js\",\n+    \"migration:check\": \"node scripts/check-migration.js\",\n+    \"migration:test\": \"node scripts/test-migration.js\",\n+    \"docs:export\": \"node scripts/export-docs-system.cjs\",\n+    \"ai:generate\": \"node scripts/generate-ai-context.js\",\n+    \"claude:update\": \"node scripts/update-claude-md.js\",\n+    \"claude:memory\": \"node scripts/update-claude-memory.cjs\",\n     \"prepare\": \"husky\"\n   },\n   \"dependencies\": {\ndiff --git a/scripts/claude-handoff.js b/scripts/claude-handoff.js\nindex 684699d..e7b38c0 100644\n--- a/scripts/claude-handoff.js\n+++ b/scripts/claude-handoff.js\n@@ -461,6 +461,7 @@ async function main() {\n   }\n }\n \n-if (import.meta.url === `file://${process.argv[1]}`) {\n+// Check if this script is being run directly\n+if (process.argv[1] && process.argv[1].endsWith('claude-handoff.js')) {\n   main();\n }\n\\ No newline at end of file",
      "lastCommit": "e477a85 fix: enhance available jobs panel visibility and sizing"
    },
    "conversationContext": {
      "keyDecisions": [
        "Don't remove 'unused' variables - many are used in JSX conditionally",
        "Use fixed_migration.sql not original migration due to duplicate column error",
        "Focus on critical test failures first before ESLint cleanup",
        "ResourceCard crash was due to missing null check on assignments filter",
        "JobRow tests failing due to missing getMagnetInteractionRule mock in context"
      ],
      "userPreferences": [
        "User wants comprehensive analysis and context",
        "User prefers to see patterns and root causes",
        "User is cautious about removing code that might be used later",
        "User wants to understand the 'why' behind changes"
      ],
      "importantContext": [
        "Database already has schedule_date column (partial migration applied)",
        "RLS policies are blocking integration tests",
        "ESLint errors are mostly unused vars and 'any' types (lower priority)",
        "Test failures are clustered - fix root causes for maximum impact"
      ],
      "customNotes": "No additional notes provided"
    },
    "continuationPlan": {
      "immediate": [
        {
          "action": "Apply database migration",
          "command": "Copy fixed_migration.sql content to Supabase SQL editor and run",
          "timeEstimate": "5 minutes",
          "priority": "CRITICAL",
          "blocksFeatures": [
            "Week View",
            "Multi-day scheduling",
            "Job templates"
          ]
        }
      ],
      "shortTerm": [
        {
          "action": "Clean up 534 ESLint errors",
          "focus": "Remove genuinely unused variables, fix any types",
          "timeEstimate": "1-2 hours",
          "priority": "MEDIUM"
        },
        {
          "action": "Commit 7 uncommitted changes",
          "command": "git add . && git commit -m \"Session progress: [description]\"",
          "timeEstimate": "5 minutes",
          "priority": "LOW"
        }
      ],
      "longTerm": [
        "Performance optimizations (React.memo, bundle size)",
        "Week View feature completion and testing",
        "E2E test setup with Playwright",
        "Documentation updates"
      ]
    },
    "environment": {
      "node": "v24.4.1",
      "npm": "11.4.2",
      "git": "git version 2.49.0.windows.1",
      "platform": "win32",
      "cwd": "C:\\Users\\ai\\Desktop\\boardOS",
      "env": {
        "NODE_ENV": "development",
        "CI": "false"
      }
    }
  },
  "timeSinceHandoff": "8 minute(s) ago",
  "currentState": {
    "git": {
      "branch": "main",
      "hasChanges": true,
      "uncommittedFiles": [
        ".claude/history.json",
        ".claude/last-status.json",
        ".claude/settings.local.json",
        ".gitignore",
        ".husky/pre-commit",
        "CLAUDE_CONTEXT.md",
        "docs/ai-context/api.aimd",
        "docs/ai-context/business-logic.aimd",
        "docs/ai-context/components.aimd",
        "package.json",
        "scripts/check-migration.js",
        "scripts/claude-handoff.js",
        "scripts/claude-history.js",
        "scripts/claude-reset.js",
        "scripts/claude-resume.js",
        "scripts/claude-session.js",
        "scripts/claude-smart-start.js",
        "scripts/setup-claude.js"
      ],
      "unpushedCommits": [],
      "lastCommit": "e477a85 fix: enhance available jobs panel visibility and sizing",
      "status": "M .claude/history.json\n M .claude/last-status.json\n M .claude/settings.local.json\n M .gitignore\n M .husky/pre-commit\n M CLAUDE_CONTEXT.md\n M docs/ai-context/api.aimd\n M docs/ai-context/business-logic.aimd\n M docs/ai-context/components.aimd\n M package.json\n M scripts/check-migration.js\n M scripts/claude-handoff.js\n M scripts/claude-history.js\n M scripts/claude-reset.js\n M scripts/claude-resume.js\n M scripts/claude-session.js\n M scripts/claude-smart-start.js\n M scripts/setup-claude.js\n?? .claude/archive/\n?? .claude/sessions/\n?? AI_CONTEXT.json\n?? AI_CONTEXT_MEMORY.json\n?? dist/\n?? node_modules/\n?? nul\n?? scripts/ai-context-agent.js\n?? scripts/collectors/\n?? scripts/generate-ai-context.js\n?? scripts/update-ai-context.js\n?? vite.config.ts.timestamp-1756473652157-e2cddc7204ea.mjs"
    },
    "tests": {
      "passing": 0,
      "failing": 0,
      "total": 0,
      "coverage": 0,
      "failures": [],
      "success": false
    },
    "lint": {
      "total": 552,
      "errors": 534,
      "warnings": 18,
      "issues": [
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 1,
          "message": "'test' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 1,
          "message": "'expect' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 3,
          "message": "'TestDataFactory' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 4,
          "message": "'SchedulerPage' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 5,
          "message": "'MagnetPage' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 202,
          "message": "'scenario' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 219,
          "message": "'scenario' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 234,
          "message": "'scenario' is defined but never used.",
          "severity": "error",
          "rule": "@typescript-eslint/no-unused-vars"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 299,
          "message": "Unexpected any. Specify a different type.",
          "severity": "error",
          "rule": "@typescript-eslint/no-explicit-any"
        },
        {
          "file": "\\playwright\\generators\\test-generator.ts",
          "line": 376,
          "message": "A `require()` style import is forbidden.",
          "severity": "error",
          "rule": "@typescript-eslint/no-require-imports"
        }
      ]
    },
    "server": {
      "devServerRunning": true,
      "port": 5173
    }
  },
  "changesSinceHandoff": {
    "git": {
      "branchChanged": false,
      "newCommits": false,
      "filesChanged": true,
      "newUncommitted": [
        ".claude/history.json",
        ".claude/last-status.json",
        ".gitignore",
        "CLAUDE_CONTEXT.md",
        "scripts/check-migration.js",
        "scripts/claude-history.js",
        "scripts/claude-reset.js",
        "scripts/claude-resume.js",
        "scripts/claude-session.js",
        "scripts/claude-smart-start.js",
        "scripts/setup-claude.js"
      ],
      "committed": []
    },
    "tests": {
      "passingChange": 0,
      "failingChange": 0,
      "totalChange": 0,
      "improvement": false,
      "regression": false
    },
    "lint": {
      "errorChange": 0,
      "warningChange": 0,
      "improvement": false,
      "regression": false
    },
    "files": {
      "stillModified": [
        ".claude/settings.local.json",
        ".husky/pre-commit",
        "docs/ai-context/api.aimd",
        "docs/ai-context/business-logic.aimd",
        "docs/ai-context/components.aimd",
        "package.json",
        "scripts/claude-handoff.js"
      ],
      "newlyModified": [
        ".claude/history.json",
        ".claude/last-status.json",
        ".gitignore",
        "CLAUDE_CONTEXT.md",
        "scripts/check-migration.js",
        "scripts/claude-history.js",
        "scripts/claude-reset.js",
        "scripts/claude-resume.js",
        "scripts/claude-session.js",
        "scripts/claude-smart-start.js",
        "scripts/setup-claude.js"
      ],
      "committed": []
    }
  },
  "updatedPlan": {
    "immediate": [
      {
        "action": "Apply database migration",
        "command": "Copy fixed_migration.sql content to Supabase SQL editor and run",
        "timeEstimate": "5 minutes",
        "priority": "CRITICAL",
        "blocksFeatures": [
          "Week View",
          "Multi-day scheduling",
          "Job templates"
        ],
        "status": "STILL_NEEDED",
        "note": "Migration still not applied - remains critical"
      }
    ],
    "shortTerm": [
      {
        "action": "Clean up 534 ESLint errors",
        "focus": "Remove genuinely unused variables, fix any types",
        "timeEstimate": "1-2 hours",
        "priority": "MEDIUM",
        "status": "SAME"
      },
      {
        "action": "Commit 7 uncommitted changes",
        "command": "git add . && git commit -m \"Session progress: [description]\"",
        "timeEstimate": "5 minutes",
        "priority": "LOW"
      }
    ],
    "longTerm": [
      "Performance optimizations (React.memo, bundle size)",
      "Week View feature completion and testing",
      "E2E test setup with Playwright",
      "Documentation updates"
    ]
  },
  "combinedContext": {
    "sessionHistory": {
      "original": "claude-1756485361374-zz04f8v6d",
      "resumed": "claude-1756485898723-993ku6v3n",
      "timeBetween": "8 minute(s) ago"
    },
    "activeTask": {
      "description": "Fixing test failures",
      "priority": "high",
      "filesInvolved": [
        "CLAUDE.md",
        "docs/02-api/generated/classes/classes_Magnet.Magnet.html",
        "docs/02-api/generated/classes/classes_Magnet.MagnetManager.html",
        "docs/02-api/generated/classes/components_common_ErrorBoundary.default.html",
        "docs/02-api/generated/classes/services_DatabaseService.DatabaseService.html"
      ],
      "estimatedTimeRemaining": "30-60 minutes"
    },
    "completedProgress": [
      "✅ Added null check for assignments filter",
      "✅ Added missing getDropRules and helper methods",
      "✅ Fixed test context mocks and imports",
      "✅ Created safer database migration script"
    ],
    "codeContext": {
      "modifiedFiles": [
        ".claude/settings.local.json",
        ".husky/pre-commit",
        "docs/ai-context/api.aimd",
        "docs/ai-context/business-logic.aimd",
        "docs/ai-context/components.aimd",
        "package.json",
        "scripts/claude-handoff.js"
      ],
      "criticalFileContents": {
        "package.json": "{\n  \"name\": \"construction-scheduler\",\n  \"private\": true,\n  \"version\": \"0.1.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"dev:docs\": \"concurrently \\\"vite\\\" \\\"npm run docs:watch\\\"\",\n    \"build\": \"vite build\",\n    \"lint\": \"eslint .\",\n    \"preview\": \"vite preview\",\n    \"test\": \"vitest\",\n    \"test:e2e\": \"playwright test\",\n    \"test:e2e:ui\": \"playwright test --ui\",\n    \"test:e2e:debug\": \"playwright test --debug\",\n    \"test:e2e:headed\": \"playwright test --headed\",\n    \"test:e2e:chrome\": \"playwright test --project=chromium\",\n    \"test:e2e:firefox\": \"playwright test --project=firefox\",\n    \"test:e2e:webkit\": \"playwright test --project=webkit\",\n    \"test:e2e:mobile\": \"playwright test --project='Mobile Chrome' --project='Mobile Safari'\",\n    \"test:e2e:generate\": \"node scripts/generate-dynamic-tests.js\",\n    \"test:e2e:watch\": \"node scripts/watch-rules.js\",\n    \"test:e2e:update-snapshots\": \"playwright test --update-snapshots\",\n    \"test:e2e:report\": \"playwright show-report\",\n    \"test:all\": \"npm run test && npm run test:e2e\",\n    \"playwright:install\": \"playwright install\",\n    \"playwright:codegen\": \"playwright codegen http://localhost:5173\",\n    \"docs:generate\": \"node scripts/generate-docs.cjs\",\n    \"docs:watch\": \"node scripts/generate-docs.cjs --watch\",\n    \"docs:api\": \"typedoc\",\n    \"docs:build\": \"npm run docs:generate && npm run docs:api\",\n    \"docs:ai-context\": \"node scripts/update-ai-context.js\",\n    \"commit\": \"node scripts/auto-commit.js\",\n    \"save\": \"node scripts/quick-save.js\",\n    \"qs\": \"node scripts/quick-save.js\",\n    \"claude:start\": \"node scripts/claude-smart-start.js\",\n    \"claude:handoff\": \"node scripts/claude-handoff.js\",\n    \"claude:status\": \"node scripts/claude-status.js\",\n    \"claude:reset\": \"node scripts/claude-reset.js\",\n    \"claude:history\": \"node scripts/claude-history.js\",\n    \"setup:claude\": \"node scripts/setup-claude.js\",\n    \"ai:context\": \"node scripts/ai-context-agent.js\",\n    \"ai:context:verbose\": \"node scripts/ai-context-agent.js --verbose\",\n    \"ai:context:watch\": \"node scripts/ai-context-agent.js --watch\",\n    \"ai:context:analyze\": \"node scripts/ai-context-agent.js --analyze --verbose\",\n    \"claude:resume\": \"node scripts/claude-resume.js\",\n    \"claude:session\": \"node scripts/claude-session.js\",\n    \"migration:check\": \"node scripts/check-migration.js\",\n    \"migration:test\": \"node scripts/test-migration.js\",\n    \"docs:export\": \"node scripts/export-docs-system.cjs\",\n    \"ai:generate\": \"node scripts/generate-ai-context.js\",\n    \"claude:update\": \"node scripts/update-claude-md.js\",\n    \"claude:memory\": \"node scripts/update-claude-memory.cjs\",\n    \"prepare\": \"husky\"\n  },\n  \"dependencies\": {\n    \"@supabase/supabase-js\": \"^2.56.0\",\n    \"@use-gesture/react\": \"^10.3.1\",\n    \"framer-motion\": \"^11.0.5\",\n    \"immer\": \"^10.1.1\",\n    \"lucide-react\": \"^0.344.0\",\n    \"react\": \"^18.3.1\",\n    \"react-dnd\": \"^16.0.1\",\n    \"react-dnd-html5-backend\": \"^16.0.1\",\n    \"react-dnd-multi-backend\": \"^9.0.0\",\n    \"react-dnd-touch-backend\": \"^16.0.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"uuid\": \"^9.0.1\",\n    \"zustand\": \"^5.0.7\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^19.8.1\",\n    \"@commitlint/config-conventional\": \"^19.8.1\",\n    \"@eslint/js\": \"^9.9.1\",\n    \"@playwright/test\": \"^1.55.0\",\n    \"@testing-library/jest-dom\": \"^6.2.1\",\n    \"@testing-library/react\": \"^14.2.1\",\n    \"@testing-library/user-event\": \"^14.4.3\",\n    \"@types/node\": \"^24.3.0\",\n    \"@types/react\": \"^18.3.5\",\n    \"@types/react-dom\": \"^18.3.0\",\n    \"@types/typescript\": \"^0.4.29\",\n    \"@types/uuid\": \"^9.0.8\",\n    \"@vitejs/plugin-react\": \"^4.3.1\",\n    \"autoprefixer\": \"^10.4.18\",\n    \"chokidar\": \"^4.0.3\",\n    \"concurrently\": \"^9.2.1\",\n    \"eslint\": \"^9.9.1\",\n    \"eslint-plugin-react-hooks\": \"^5.1.0-rc.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.11\",\n    \"globals\": \"^15.9.0\",\n    \"husky\": \"^9.1.7\",\n    \"jsdom\": \"^23.2.0\",\n    \"nodemon\": \"^3.1.10\",\n    \"postcss\": \"^8.4.35\",\n    \"react-dnd-test-backend\": \"^16.0.1\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"typedoc\": \"^0.28.11\",\n    \"typescript\": \"^5.9.2\",\n    \"typescript-eslint\": \"^8.3.0\",\n    \"vite\": \"^5.4.2\",\n    \"vitest\": \"^1.6.0\"\n  }\n}"
      },
      "currentPatches": "diff --git a/.claude/settings.local.json b/.claude/settings.local.json\nindex 4a5f77a..7cc340d 100644\n--- a/.claude/settings.local.json\n+++ b/.claude/settings.local.json\n@@ -30,7 +30,8 @@\n       \"Bash(set VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVxYmdjZmRveW5kb2N1b21udGR4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU4ODQxMzMsImV4cCI6MjA3MTQ2MDEzM30.fUM25Cb_uWkJJ75Dw_uZVPn9qzZ-7z5o2zOq8jkQ0d8)\",\n       \"Bash(npx playwright test:*)\",\n       \"Bash(pkill:*)\",\n-      \"Bash(npx husky init:*)\"\n+      \"Bash(npx husky init:*)\",\n+      \"Bash(git stash:*)\"\n     ],\n     \"deny\": [],\n     \"ask\": []\ndiff --git a/.husky/pre-commit b/.husky/pre-commit\nindex 43c085c..bcdd16e 100644\n--- a/.husky/pre-commit\n+++ b/.husky/pre-commit\n@@ -6,6 +6,10 @@ node scripts/update-claude-md.js\n # Add the updated CLAUDE.md to the commit\n git add CLAUDE.md\n \n+# Update AI context documentation\n+npm run docs:ai-context --silent\n+git add docs/ai-context/\n+\n # Generate documentation (optional - comment out if too slow)\n # npm run docs:generate --silent\n # git add docs/\ndiff --git a/docs/ai-context/api.aimd b/docs/ai-context/api.aimd\nindex 0f8133d..9944028 100644\n--- a/docs/ai-context/api.aimd\n+++ b/docs/ai-context/api.aimd\n@@ -1 +1,272 @@\n-API_CONTEXT: Generated from services\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Total Files: 92 -->\n+<!-- Services: 4 -->\n+<!-- Utilities: 12 -->\n+<!-- Hooks: 2 -->\n+<!-- END METADATA -->\n+\n+# API Context for BoardOS Construction Scheduler\n+\n+## Services\n+\n+### DatabaseService\n+**File**: `src/services/DatabaseService.ts`\n+**Description**: Complete database service for Supabase integration with real-time updates\n+\n+#### Key Methods:\n+- `transformDbEmployee(dbEmployee: any): Employee` - Transform database employee data\n+- `transformDbEquipment(dbEquipment: any): Equipment` - Transform database equipment data\n+- `transformDbResource(dbResource: DbResource): Resource` - Transform database resource data\n+- `transformDbJob(dbJob: DbJob): Job` - Transform database job data\n+- `transformDbAssignment(dbAssignment: DbAssignment): Assignment` - Transform database assignment data\n+\n+#### Database Operations:\n+- `getAllScheduleData()` - Load complete schedule data (resources, jobs, assignments, rules)\n+- `getJobsByDate(date: Date): Promise<Job[]>` - Get jobs for specific date\n+- `getJobsByDateRange(startDate: Date, endDate: Date): Promise<Job[]>` - Get jobs in date range\n+- `updateJobDate(jobId: string, newDate: Date, userId?: string): Promise<void>` - Update job schedule date\n+\n+#### CRUD Operations:\n+**Resources:**\n+- `createResource(resource: Omit<Resource, 'id'>): Promise<Resource>`\n+- `updateResource(resource: Resource): Promise<Resource>`\n+- `deleteResource(id: string): Promise<void>`\n+\n+**Jobs:**\n+- `createJob(job: Omit<Job, 'id'>): Promise<Job>`\n+- `updateJob(job: Job): Promise<Job>`\n+- `deleteJob(id: string): Promise<void>`\n+\n+**Assignments:**\n+- `createAssignment(assignment: Omit<Assignment, 'id' | 'attachments'>): Promise<Assignment>`\n+- `updateAssignment(assignment: Assignment): Promise<Assignment>`\n+- `deleteAssignment(id: string): Promise<void>`\n+- `assignResource(resourceId: string, jobId: string, row: RowType): Promise<Assignment>`\n+- `attachResources(sourceAssignmentId: string, targetAssignmentId: string): Promise<void>`\n+\n+#### Real-time Subscriptions:\n+- `subscribeToScheduleChanges(callbacks)` - Setup real-time listeners for all table changes\n+  - Resources, Jobs, Assignments, Rules, Drop Rules, Job Row Configs, Truck Driver Assignments\n+\n+#### Rule Management:\n+- `updateMagnetRule(rule: MagnetInteractionRule): Promise<void>`\n+- `updateDropRule(rowType: RowType, allowedTypes: ResourceType[]): Promise<void>`\n+- `getMagnetInteractionRules(): Promise<MagnetInteractionRule[]>`\n+- `getDropRules(): Promise<DropRule[]>`\n+\n+### DurationEstimationService\n+**File**: `src/services/DurationEstimationService.ts`\n+**Description**: Calculate job durations based on type and scope\n+\n+#### Production Rates (per day):\n+- Milling: 22,000 sq yards\n+- Paving Highway: 2,000 tons\n+- Paving Parking Lot: 800 tons\n+- Paving Residential: 1,500 tons\n+- Excavation: 150 cubic yards\n+- Drainage: 300 linear feet\n+- Concrete: 50 cubic yards\n+\n+#### Key Methods:\n+- `estimateMillingDays(sqYards: number, complexity: number = 1.0): number`\n+- `estimatePavingDays(tons: number, jobCategory: Job['job_category'], complexity: number = 1.0): number`\n+- `estimateExcavationDays(cubicYards: number, complexity: number = 1.0): number`\n+- `estimateDrainageDays(linearFeet: number, complexity: number = 1.0): number`\n+- `estimateConcreteDays(cubicYards: number, complexity: number = 1.0): number`\n+- `calculateJobDuration(job: Partial<Job>): JobEstimate`\n+- `generateJobPhases(job: Partial<Job>, startDate: string): JobPhase[]`\n+- `calculateEndDate(startDate: string, totalDays: number): string`\n+\n+### ExportService\n+**File**: `src/services/ExportService.ts`\n+**Description**: Export schedule data to various formats (CSV, Excel, PDF)\n+\n+### TestDatabaseService\n+**File**: `src/services/TestDatabaseService.ts`\n+**Description**: Testing utilities and auto-test generation for database operations\n+\n+## Hooks\n+\n+### useScheduler\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Main context hook for schedule state management\n+\n+#### State:\n+- `jobs: Job[]` - All scheduled jobs\n+- `resources: Resource[]` - Available resources (equipment, personnel)\n+- `assignments: Assignment[]` - Resource-to-job mappings\n+- `selectedDate: Date` - Currently selected date\n+- `currentView: ViewType` - Current calendar view (day, week, month)\n+- `filteredResourceType: string | null` - Resource type filter\n+- `searchTerm: string` - Search filter\n+- `truckDriverAssignments: Record<string, string>` - Truck-driver mappings\n+- `magnetInteractionRules: MagnetInteractionRule[]` - Attachment rules\n+- `dropRules: DropRule[]` - Drag-drop permissions\n+- `jobRowConfigs: JobRowConfig[]` - Job layout configurations\n+- `isLoading: boolean` - Loading state\n+- `error: string | null` - Error state\n+\n+#### Job Actions:\n+- `addJob(job: Omit<Job, 'id'>): Promise<void>`\n+- `updateJob(job: Job): Promise<void>`\n+- `removeJob(jobId: string): Promise<void>`\n+- `finalizeJob(jobId: string): Promise<void>`\n+- `unfinalizeJob(jobId: string): Promise<void>`\n+\n+#### Resource Actions:\n+- `addResource(resource: Omit<Resource, 'id'>): Promise<void>`\n+- `updateResource(resource: Resource): Promise<void>`\n+- `removeResource(resourceId: string): Promise<void>`\n+- `toggleResourceOnSite(resourceId: string): Promise<void>`\n+\n+#### Assignment Actions:\n+- `assignResource(resourceId: string, jobId: string, row: RowType, position?: number): Promise<string>`\n+- `assignResourceWithTruckConfig(resourceId: string, jobId: string, row: RowType, truckConfig?: 'flowboy' | 'dump-trailer', position?: number, isSecondShift?: boolean): Promise<string>`\n+- `updateAssignment(assignment: Assignment): Promise<void>`\n+- `removeAssignment(assignmentId: string): Promise<void>`\n+- `attachResources(targetId: string, sourceId: string): Promise<void>`\n+- `detachResources(assignmentId: string): Promise<void>`\n+- `updateTimeSlot(assignmentId: string, timeSlot: TimeSlot): Promise<void>`\n+- `updateAssignmentNote(assignmentId: string, note: string): Promise<void>`\n+\n+### useMagnet\n+**File**: `src/hooks/useMagnet.ts`\n+**Description**: Magnetic attachment system for drag-and-drop operations\n+\n+#### Methods:\n+- `useMagnet()` - Hook for single magnet operations\n+- `useMagnets()` - Hook for multiple magnet operations\n+\n+### useOptimizedScheduler\n+**File**: `src/hooks/useOptimizedScheduler.ts`\n+**Description**: Performance-optimized schedule operations\n+\n+#### Methods:\n+- `useJobData()` - Optimized job data loading\n+- `useResourcePool()` - Optimized resource pool management\n+- `useOptimizedScheduler()` - Main optimized scheduler hook\n+\n+## Utilities\n+\n+### attachmentRules\n+**File**: `src/utils/attachmentRules.ts`\n+**Description**: Equipment-operator attachment logic and validation\n+\n+#### Core Functions:\n+- `canAttach(sourceType: ResourceType, targetType: ResourceType): boolean`\n+- `getMaxAttachments(targetType: ResourceType, sourceType: ResourceType): number`\n+- `getRequiredAttachments(targetType: ResourceType): ResourceType[]`\n+- `getRequiredSkills(sourceType: ResourceType, targetType: ResourceType): string[]`\n+- `getValidAttachmentTypes(targetType: ResourceType): ResourceType[]`\n+- `hasRequiredAttachments(assignment: Assignment, allAssignments: Assignment[]): boolean`\n+- `validateAttachmentGroup(assignments: Assignment[]): boolean`\n+\n+#### Attachment Rules:\n+- **Pavers**: Require 1 operator, allow up to 2 screwmen\n+- **General Equipment**: Require 1 operator each (roller, excavator, sweeper, etc.)\n+- **Trucks**: Require 1 driver each\n+- **Milling Machines**: Can have 1 groundman\n+\n+### colorSystem\n+**File**: `src/utils/colorSystem.ts`\n+**Description**: Resource styling and shift indicators\n+\n+#### Functions:\n+- `getResourceStyle(resource: Resource): string` - Get resource background/text colors\n+- `getResourceBorder(resource: Resource): string` - Get resource border style\n+- `getShiftStatusBorder(assignments: Assignment[]): string` - Get shift status indicators\n+- `getCompleteBorderStyle(resource: Resource, assignments: Assignment[]): string`\n+- `getLegacyResourceColors(resourceType: ResourceType): object`\n+\n+#### Color Scheme:\n+- **Equipment**: Yellow background (`bg-yellow-500`), black text, yellow border (`border-yellow-700`)\n+- **Personnel**: Various colors based on role\n+- **Shift Indicators**:\n+  - Red border: Double shift (day + night)\n+  - Teal border: Multiple day jobs\n+  - Orange border: Night shift only\n+\n+### timeConflictDetection\n+**File**: `src/utils/timeConflictDetection.ts`\n+**Description**: Overlap detection and resolution for resource scheduling\n+\n+#### Functions:\n+- `detectTimeConflicts(assignments: Assignment[]): TimeConflict[]`\n+- `detectAllTimeConflicts(assignments: Assignment[], resources: Resource[]): TimeConflict[]`\n+- `doTimeSlotsOverlap(slot1: TimeSlot, slot2: TimeSlot): boolean`\n+- `getOverlapPeriod(slot1: TimeSlot, slot2: TimeSlot): TimeSlot | null`\n+- `validateTimeSlotAssignment(assignment: Assignment, allAssignments: Assignment[]): boolean`\n+- `autoResolveConflicts(conflicts: TimeConflict[]): Assignment[]`\n+\n+### ruleCreator\n+**File**: `src/utils/ruleCreator.ts`\n+**Description**: Generate magnet and drop rules for different job types\n+\n+#### Functions:\n+- `createMagnetRules(): MagnetInteractionRule[]`\n+- `createEnhancedMagnetRules(): MagnetInteractionRule[]`\n+- `createAdvancedMagnetRules(): MagnetInteractionRule[]`\n+- `createDropRules(): DropRule[]`\n+- `buildStandardConstructionRules(): MagnetInteractionRule[]`\n+- `buildStandardDropRules(): DropRule[]`\n+\n+### jobUtils\n+**File**: `src/utils/jobUtils.ts`\n+**Description**: Job type recommendations and validations\n+\n+#### Functions:\n+- `getRecommendedEquipment(jobType: Job['type']): ResourceType[]`\n+- `isRowNeededForJobType(rowType: RowType, jobType: Job['type']): boolean`\n+- `isRowTogglable(rowType: RowType, jobType: Job['type']): boolean`\n+\n+## Context Providers\n+\n+### SchedulerContext\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Global schedule state management with optimistic updates\n+\n+### DragContext\n+**File**: `src/context/DragContext.tsx`\n+**Description**: Drag-and-drop state management for resource assignments\n+\n+### MobileContext\n+**File**: `src/context/MobileContext.tsx`\n+**Description**: Mobile device detection and responsive behavior\n+\n+### ModalContext\n+**File**: `src/context/ModalContext.tsx`\n+**Description**: Modal state management for dialogs and overlays\n+\n+### KeyboardShortcutsContext\n+**File**: `src/context/KeyboardShortcutsContext.tsx`\n+**Description**: Keyboard shortcuts and hotkey management\n+\n+## Types\n+\n+### Core Types:\n+- `Resource` - Equipment, vehicles, and personnel\n+- `Job` - Construction projects with shifts\n+- `Assignment` - Resource-to-job mappings with attachments\n+- `TimeSlot` - Time periods for assignments\n+- `MagnetInteractionRule` - Attachment rules between resources\n+- `DropRule` - Drag-drop permissions for job rows\n+- `JobRowConfig` - Dynamic job layout configurations\n+\n+### Enums:\n+- `ResourceType` - All resource categories (operator, driver, truck, paver, etc.)\n+- `RowType` - Job row types (Foreman, Equipment, Crew, Trucks, etc.)\n+- `ViewType` - Calendar views (day, week, month)\n+\n+## Real-time Features\n+\n+### Supabase Integration:\n+- Real-time subscriptions for all database tables\n+- Optimistic UI updates for immediate feedback\n+- Automatic conflict resolution and sync\n+\n+### Performance Optimizations:\n+- Memoized data filtering and sorting\n+- Virtual scrolling for large datasets\n+- Debounced search and filter operations\n+- Background data prefetching\n\\ No newline at end of file\ndiff --git a/docs/ai-context/business-logic.aimd b/docs/ai-context/business-logic.aimd\nindex b3f7e5a..17418ab 100644\n--- a/docs/ai-context/business-logic.aimd\n+++ b/docs/ai-context/business-logic.aimd\n@@ -1 +1,255 @@\n-BUSINESS_CONTEXT: Generated from business logic\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Business Logic Files: 12 -->\n+<!-- END METADATA -->\n+\n+# Business Logic Context for BoardOS Construction Scheduler\n+\n+## Resource Attachment Rules\n+\n+### Safety Requirements (Mandatory Attachments)\n+**File**: `src/utils/attachmentRules.ts`\n+\n+#### Equipment Safety Rules:\n+- **All Equipment MUST have operators** (safety requirement)\n+  - Pavers: 1 operator required\n+  - Rollers: 1 operator required  \n+  - Excavators: 1 operator required\n+  - Sweepers: 1 operator required\n+  - Milling Machines: 1 operator required\n+  - Dozers: 1 operator required\n+  - Payloaders: 1 operator required\n+  - Skidsteers: 1 operator required\n+\n+#### Vehicle Requirements:\n+- **All Trucks MUST have drivers** (mandatory)\n+  - Maximum 1 driver per truck\n+  - Optional: 1 laborer per truck\n+\n+#### Specialized Equipment Rules:\n+- **Pavers**:\n+  - Required: 1 operator\n+  - Optional: Up to 2 laborers with screwman skills\n+- **Milling Machines**:\n+  - Required: 1 operator\n+  - Optional: 1 groundman\n+\n+### Attachment Validation Functions:\n+- `canAttach(sourceType, targetType): boolean` - Check if attachment is allowed\n+- `getRequiredAttachments(type): ResourceType[]` - Get mandatory attachments\n+- `getMaxAttachments(sourceType, targetType): number` - Get attachment limits\n+- `hasRequiredAttachments(type, attachedTypes): boolean` - Validate requirements\n+- `validateAttachmentGroup(mainType, attachedTypes)` - Complete validation\n+\n+## Shift Management System\n+\n+### Shift Types:\n+1. **Day Shift** (default): Regular daytime operations\n+2. **Night Shift** (secondary): Nighttime operations with Ctrl+drag\n+\n+### Multi-Shift Assignment Logic:\n+- **Normal Drag**: Move assignment (removes from original)\n+- **Ctrl+Drag**: Create second shift assignment (keeps original)\n+- **Drag Off Job**: Remove assignment completely\n+\n+### Time Conflict Detection:\n+**File**: `src/utils/timeConflictDetection.ts`\n+\n+#### Conflict Types:\n+- **Double Shift**: Same resource on day AND night shift\n+- **Overlapping Times**: Time slot conflicts within same shift\n+- **Multiple Day Jobs**: Same resource on multiple day jobs\n+\n+#### Validation Functions:\n+- `detectTimeConflicts(assignments): TimeConflict[]`\n+- `detectAllTimeConflicts(assignments, resources): TimeConflict[]`\n+- `doTimeSlotsOverlap(slot1, slot2): boolean`\n+- `validateTimeSlotAssignment(assignment, allAssignments): boolean`\n+- `autoResolveConflicts(conflicts): Assignment[]`\n+\n+## Visual Indicators System\n+\n+### Border Color Coding:\n+**File**: `src/utils/colorSystem.ts`\n+\n+#### Shift Status Borders:\n+- **Red Border (`border-red-500`)**: Double shift (day + night)\n+- **Teal Border (`border-teal-500`)**: Multiple day jobs\n+- **Orange Border (`border-orange-500`)**: Night shift only\n+- **Default Border**: Single assignment or unassigned\n+\n+#### Resource Type Colors:\n+- **Equipment**: Yellow background (`bg-yellow-500`), black text, yellow border (`border-yellow-700`)\n+- **Personnel**: \n+  - Operators: White background, black text\n+  - Drivers: Green background (`bg-green-500`), black text\n+  - Stripers: Blue background (`bg-blue-500`), white text\n+  - Foremen: Orange background (`bg-orange-500`), black text\n+  - Laborers: White background, green text\n+- **Trucks**: Black background (`bg-black`), white text\n+\n+#### Priority System:\n+1. **Highest**: Red border (double shift)\n+2. **Medium**: Teal border (multiple day jobs)\n+3. **Low**: Orange border (night only)\n+4. **Default**: Resource type border\n+\n+### Time Badge Colors:\n+- **Green Badge**: On-site arrival time\n+- **Blue Badge**: Yard departure time\n+\n+## Job Organization Rules\n+\n+### Row Type System:\n+**File**: `src/utils/jobUtils.ts`\n+\n+#### Standard Row Types:\n+1. **Foreman**: Only foremen allowed\n+2. **Equipment**: Equipment + required operators\n+3. **Crew**: All personnel types allowed\n+4. **Trucks**: Trucks + required drivers\n+5. **Sweeper**: Sweepers + operators (specialized)\n+6. **Tack**: Tack-specific operations\n+7. **MPT**: MPT-specific operations\n+\n+#### Job Type Recommendations:\n+- `getRecommendedEquipment(jobType): ResourceType[]`\n+- `isRowNeededForJobType(rowType, jobType): boolean`\n+- `isRowTogglable(rowType, jobType): boolean`\n+\n+### Row Visibility Rules:\n+- **Milling Jobs**: Show Equipment, Crew, Trucks rows\n+- **Paving Jobs**: Show Equipment, Crew, Trucks, Sweeper rows\n+- **Both Jobs**: Show all row types\n+- **Custom Jobs**: Configurable via JobRowConfig\n+\n+## Magnet Interaction System\n+\n+### Auto-Attachment Rules:\n+**File**: `src/utils/ruleCreator.ts`\n+\n+#### Magnet Behavior:\n+- **Equipment dropped on job**: Automatically creates operator requirement\n+- **Operator dragged near equipment**: Auto-attaches if compatible\n+- **Multiple compatible operators**: Shows selection dialog\n+- **Invalid attachments**: Prevented with visual feedback\n+\n+#### Rule Generation:\n+- `createMagnetRules(): MagnetInteractionRule[]`\n+- `createEnhancedMagnetRules(): MagnetInteractionRule[]`\n+- `buildStandardConstructionRules(): MagnetInteractionRule[]`\n+\n+### Drop Permission Rules:\n+**File**: `src/utils/ruleCreator.ts`\n+\n+#### Row-Based Permissions:\n+- **Foreman Row**: Only foremen can be dropped\n+- **Equipment Row**: Only equipment + operators\n+- **Crew Row**: All personnel types\n+- **Truck Row**: Only trucks + drivers\n+\n+#### Functions:\n+- `createDropRules(): DropRule[]`\n+- `buildStandardDropRules(): DropRule[]`\n+\n+## Duration Estimation Logic\n+\n+### Production Rates (per day):\n+**File**: `src/services/DurationEstimationService.ts`\n+\n+#### Base Rates:\n+- **Milling**: 22,000 sq yards/day\n+- **Paving Highway**: 2,000 tons/day\n+- **Paving Parking Lot**: 800 tons/day (slower due to complexity)\n+- **Paving Residential**: 1,500 tons/day\n+- **Excavation**: 150 cubic yards/day\n+- **Drainage**: 300 linear feet/day\n+- **Concrete**: 50 cubic yards/day\n+\n+#### Complexity Factors:\n+- **Base**: 1.0 (normal conditions)\n+- **Complex**: 1.5+ (difficult terrain, tight spaces)\n+- **Simple**: 0.8 (ideal conditions)\n+\n+### Job Phase Logic:\n+1. **Milling Only**: Single phase\n+2. **Paving Only**: Single phase\n+3. **Both (Mill & Pave)**: Sequential phases (mill first, then pave)\n+4. **Drainage**: Three phases (excavation → drainage → concrete)\n+\n+## Business Rules Validation\n+\n+### Pre-Assignment Checks:\n+1. **Resource Availability**: Not already assigned to conflicting job\n+2. **Skill Requirements**: Personnel has required certifications\n+3. **Equipment Status**: Equipment is operational and on-site\n+4. **Time Conflicts**: No overlapping time slots\n+\n+### Post-Assignment Validation:\n+1. **Safety Compliance**: All equipment has required operators\n+2. **Attachment Limits**: No more than max allowed attachments\n+3. **Job Requirements**: All required resources are assigned\n+\n+### Finalization Rules:\n+- Jobs cannot be finalized without required resources\n+- Finalized jobs cannot be modified without unfinalizing\n+- Time changes trigger conflict re-validation\n+\n+## Optimistic Updates Pattern\n+\n+### Update Flow:\n+1. **Immediate UI Update**: Show change instantly\n+2. **Database Operation**: Send to Supabase\n+3. **Real-time Confirmation**: Receive confirmation via subscription\n+4. **Error Recovery**: Revert UI if operation fails\n+\n+### Implementation Pattern:\n+```typescript\n+// Optimistic update\n+setAssignments(prev => {\n+  return prev.map(assignment => \n+    assignment.id === targetId \n+      ? { ...assignment, /* updated fields */ }\n+      : assignment\n+  );\n+});\n+\n+// Database operation\n+try {\n+  await DatabaseService.updateAssignment(updatedAssignment);\n+} catch (error) {\n+  // Revert on error\n+  await loadScheduleData(false);\n+}\n+```\n+\n+## Real-time Synchronization Rules\n+\n+### Conflict Resolution Priority:\n+1. **Server State**: Always authoritative\n+2. **Timestamp**: Later changes win\n+3. **User Context**: Prefer current user's changes\n+4. **Manual Resolution**: Show conflict dialog for complex cases\n+\n+### Subscription Handling:\n+- **Resource Changes**: Update resource pool immediately\n+- **Job Changes**: Refresh job columns\n+- **Assignment Changes**: Update cards with animation\n+- **Rule Changes**: Refresh validation logic\n+\n+## Data Integrity Rules\n+\n+### Cascade Operations:\n+- **Delete Job**: Remove all assignments\n+- **Delete Resource**: Remove all assignments\n+- **Delete Assignment**: Remove all attachments\n+\n+### Referential Integrity:\n+- Assignments must reference valid jobs and resources\n+- Attachments must reference valid assignments\n+- Time slots must have valid start/end times\n+\n+### Validation Triggers:\n+- **Before Save**: Validate business rules\n+- **After Load**: Validate data consistency  \n+- **Real-time**: Validate concurrent modifications\n\\ No newline at end of file\ndiff --git a/docs/ai-context/components.aimd b/docs/ai-context/components.aimd\nindex 015dfa7..082a007 100644\n--- a/docs/ai-context/components.aimd\n+++ b/docs/ai-context/components.aimd\n@@ -1 +1,494 @@\n-COMPONENT_CONTEXT: Generated from components\n\\ No newline at end of file\n+<!-- AUTO-GENERATED METADATA -->\n+<!-- Last Updated: 2025-08-29T13:47:00.937Z -->\n+<!-- Component Files: 59 -->\n+<!-- END METADATA -->\n+\n+# Components Context for BoardOS Construction Scheduler\n+\n+## Core Scheduling Components\n+\n+### Board\n+**File**: `src/components/board/Board.tsx`\n+**Description**: Main scheduling grid container\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Displays all job columns in a horizontal scrollable layout\n+- Shows loading indicator during database sync\n+- Contains \"Add New Job\" button\n+- Wraps content in ErrorBoundary\n+- Responsive design with min-width constraints\n+\n+#### Context Dependencies:\n+- `useScheduler()` - Access jobs and loading state\n+- `useModal()` - Handle modal management\n+\n+### JobColumn\n+**File**: `src/components/board/JobColumn.tsx`\n+**Description**: Individual job column with resource assignments\n+\n+#### Props:\n+- `job: Job` - Job data to display\n+\n+#### Key Features:\n+- Displays job header with name, type, and status\n+- Contains JobRow components for different resource types\n+- Shows job finalization status\n+- Handles job-level drag and drop operations\n+- Responsive column width (typically 256px)\n+\n+### JobRow\n+**File**: `src/components/board/JobRow.tsx`\n+**Description**: Row container for specific resource types within a job\n+\n+#### Props:\n+- `job: Job` - Parent job\n+- `rowType: RowType` - Type of row (Foreman, Equipment, Crew, etc.)\n+- `assignments: Assignment[]` - Assignments for this row\n+\n+#### Key Features:\n+- Drop zone for resource assignments\n+- Visual feedback for valid/invalid drops\n+- Row-specific styling and layout\n+- Assignment card containers\n+\n+### AssignmentCard\n+**File**: `src/components/resources/AssignmentCard.tsx`\n+**Description**: Draggable resource assignment cards\n+\n+#### Props:\n+- `assignment: Assignment` - Assignment data\n+- `attachedAssignments: Assignment[]` - Related attachments\n+- `isDragging?: boolean` - Drag state\n+- `isPreview?: boolean` - Preview mode\n+\n+#### Key Features:\n+- **Drag and Drop**: Draggable resource cards\n+- **Attachment Display**: Shows attached operators/equipment\n+- **Time Indicators**: Color-coded time badges\n+  - Green: On-site time\n+  - Blue: Yard departure time\n+- **Visual States**: Hover, drag, and error states\n+- **Context Menus**: Right-click for options\n+- **Modal Integration**: Opens time/person modals on interaction\n+\n+#### Time Indicator Logic:\n+- Vehicles (trucks/sweepers): Blue if offsite, green if onsite\n+- Personnel: Always green (job site time)\n+- Personnel attached to vehicles: Blue if vehicle offsite\n+\n+### ResourceCard\n+**File**: `src/components/resources/ResourceCard.tsx`\n+**Description**: Resource pool cards for unassigned resources\n+\n+#### Props:\n+- `resource: Resource` - Resource data\n+- `isDragging?: boolean` - Drag state\n+\n+#### Key Features:\n+- Draggable from resource pool\n+- Color-coded by resource type\n+- Shows resource availability status\n+- Quick assignment via drag-and-drop\n+\n+## Calendar View Components\n+\n+### WeekView\n+**File**: `src/components/board/WeekView.tsx`\n+**Description**: Weekly calendar view with job scheduling\n+\n+#### Props:\n+- `selectedDate: Date` - Current week to display\n+\n+#### Key Features:\n+- 7-day horizontal layout\n+- Job bars spanning multiple days\n+- Drag-and-drop for job rescheduling\n+- Day/night shift indicators\n+\n+### MonthView\n+**File**: `src/components/board/MonthView.tsx`\n+**Description**: Monthly calendar overview\n+\n+#### Props:\n+- `selectedDate: Date` - Current month to display\n+\n+#### Key Features:\n+- Calendar grid layout\n+- Job duration estimation\n+- Available jobs sidebar\n+- Month navigation controls\n+\n+### MonthViewJobBar\n+**File**: `src/components/board/MonthViewJobBar.tsx`\n+**Description**: Job representation in monthly view\n+\n+#### Props:\n+- `job: Job` - Job to display\n+- `startDate: Date` - Job start date\n+- `duration: number` - Estimated duration in days\n+\n+#### Key Features:\n+- Spans multiple calendar days\n+- Shows job progress\n+- Click to view details\n+- Color-coded by job type\n+\n+## Modal Components\n+\n+### AddJobModal\n+**File**: `src/components/modals/AddJobModal.tsx`\n+**Description**: Create new job modal\n+\n+#### Props:\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Job creation form\n+- Validation and error handling\n+- Integration with DurationEstimationService\n+\n+### EditJobModal  \n+**File**: `src/components/modals/EditJobModal.tsx`\n+**Description**: Edit existing job modal\n+\n+#### Props:\n+- `job: Job` - Job to edit\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Pre-filled form with job data\n+- Update job properties\n+- Delete job functionality\n+\n+### TimeSlotModal\n+**File**: `src/components/modals/TimeSlotModal.tsx`\n+**Description**: Configure assignment time slots\n+\n+#### Props:\n+- `assignment: Assignment` - Assignment to configure\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Time picker interface\n+- Shift selection (day/night)\n+- Time conflict validation\n+\n+### PersonModal\n+**File**: `src/components/modals/PersonModal.tsx`\n+**Description**: Resource/person details and management\n+\n+#### Props:\n+- `resource: Resource` - Resource to display\n+- `assignment?: Assignment` - Optional assignment context\n+- `isOpen: boolean` - Modal visibility\n+- `onClose: () => void` - Close handler\n+\n+#### Key Features:\n+- Resource information display\n+- Assignment management\n+- Contact information (for personnel)\n+\n+### EquipmentSelectorModal\n+**File**: `src/components/modals/EquipmentSelectorModal.tsx`\n+**Description**: Equipment selection interface\n+\n+#### Props:\n+- `isOpen: boolean` - Modal visibility\n+- `onSelect: (equipment: Resource) => void` - Selection handler\n+- `filterType?: ResourceType` - Equipment type filter\n+\n+#### Key Features:\n+- Filtered equipment list\n+- Search and filter capabilities\n+- Multi-selection support\n+\n+## Mobile Components\n+\n+### MobileSchedulerLayout\n+**File**: `src/components/mobile/MobileSchedulerLayout.tsx`\n+**Description**: Mobile-optimized scheduler layout\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Touch-friendly interface\n+- Swipe navigation\n+- Collapsed sidebar\n+- Mobile-specific drag handling\n+\n+### MobileDragLayer\n+**File**: `src/components/mobile/MobileDragLayer.tsx`\n+**Description**: Custom drag layer for mobile devices\n+\n+#### Props:\n+- `isDragging: boolean` - Drag state\n+- `currentOffset: XYCoord` - Drag position\n+\n+#### Key Features:\n+- Touch-based drag preview\n+- Mobile-specific positioning\n+- Performance optimizations\n+\n+### MobileJobCard\n+**File**: `src/components/mobile/MobileJobCard.tsx`\n+**Description**: Mobile-optimized job display\n+\n+#### Props:\n+- `job: Job` - Job to display\n+\n+#### Key Features:\n+- Compact job representation\n+- Touch interactions\n+- Swipe gestures\n+\n+### MobileResourcePool\n+**File**: `src/components/mobile/MobileResourcePool.tsx`\n+**Description**: Mobile resource selection interface\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Scrollable resource list\n+- Quick assignment buttons\n+- Search and filter\n+\n+## Context Provider Components\n+\n+### SchedulerProvider\n+**File**: `src/context/SchedulerContext.tsx`\n+**Description**: Global schedule state management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Schedule state (jobs, resources, assignments)\n+- CRUD operations\n+- Real-time synchronization\n+- Optimistic updates\n+\n+### DragProvider\n+**File**: `src/context/DragContext.tsx`\n+**Description**: Drag-and-drop state management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Drag state tracking\n+- Drop zone management\n+- Drag preview handling\n+- Mobile drag support\n+\n+### MobileProvider\n+**File**: `src/context/MobileContext.tsx`\n+**Description**: Mobile device detection and handling\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Device detection (mobile/desktop)\n+- Touch event handling\n+- Responsive behavior flags\n+\n+### ModalProvider\n+**File**: `src/context/ModalContext.tsx`\n+**Description**: Modal state and z-index management\n+\n+#### Props:\n+- `children: React.ReactNode` - Child components\n+\n+#### Provides:\n+- Modal stack management\n+- Z-index coordination\n+- Modal state tracking\n+- Backdrop handling\n+\n+## UI Components\n+\n+### QuickSelectOverlay\n+**File**: `src/components/ui/QuickSelectOverlay.tsx`\n+**Description**: Quick resource selection interface\n+\n+#### Props:\n+- `isVisible: boolean` - Overlay visibility\n+- `position: { x: number, y: number }` - Screen position\n+- `onSelect: (resource: Resource) => void` - Selection handler\n+\n+#### Key Features:\n+- Context-aware resource filtering\n+- Keyboard navigation\n+- Quick assignment shortcuts\n+\n+### ViewSwitcher\n+**File**: `src/components/ui/ViewSwitcher.tsx`\n+**Description**: Calendar view selection controls\n+\n+#### Props:\n+- `currentView: ViewType` - Active view\n+- `onViewChange: (view: ViewType) => void` - View change handler\n+\n+#### Key Features:\n+- Day/Week/Month view toggle\n+- Responsive button layout\n+- Keyboard shortcuts\n+\n+### CompactQuickSelect\n+**File**: `src/components/ui/CompactQuickSelect.tsx`\n+**Description**: Compact resource selection widget\n+\n+#### Props:\n+- `resources: Resource[]` - Available resources\n+- `onSelect: (resource: Resource) => void` - Selection handler\n+- `filterType?: ResourceType` - Resource type filter\n+\n+#### Key Features:\n+- Minimal UI footprint\n+- Type-ahead search\n+- Category filtering\n+\n+### DraggableQuickSelectCard\n+**File**: `src/components/ui/DraggableQuickSelectCard.tsx`\n+**Description**: Draggable resource cards for quick assignment\n+\n+#### Props:\n+- `resource: Resource` - Resource data\n+- `category: string` - Resource category\n+\n+#### Key Features:\n+- Drag-and-drop enabled\n+- Category-based styling\n+- Visual feedback on drag\n+\n+## Layout Components\n+\n+### SchedulerLayout\n+**File**: `src/components/layout/SchedulerLayout.tsx`\n+**Description**: Main application layout container\n+\n+#### Props:\n+- `children: React.ReactNode` - Main content\n+\n+#### Key Features:\n+- Sidebar + main content layout\n+- Responsive design\n+- Header and navigation\n+- Context provider wrapping\n+\n+### Sidebar\n+**File**: `src/components/layout/Sidebar.tsx`\n+**Description**: Resource pool and navigation sidebar\n+\n+#### Props:\n+- `isCollapsed?: boolean` - Collapsed state\n+\n+#### Key Features:\n+- Resource pool display\n+- Search and filtering\n+- Category organization\n+- Collapsible design\n+\n+### Navbar\n+**File**: `src/components/layout/Navbar.tsx`\n+**Description**: Top navigation bar\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Date navigation\n+- View controls\n+- User actions\n+- Responsive design\n+\n+## Specialized Components\n+\n+### TruckCard\n+**File**: `src/components/resources/TruckCard.tsx`\n+**Description**: Specialized truck resource card\n+\n+#### Props:\n+- `resource: Resource` - Truck resource\n+- `assignment?: Assignment` - Optional assignment\n+\n+#### Key Features:\n+- Truck-specific information\n+- Driver assignment status\n+- Configuration options (flowboy, dump-trailer)\n+\n+### MagnetCard\n+**File**: `src/components/magnets/MagnetCard.tsx`\n+**Description**: Magnet system visualization card\n+\n+#### Props:\n+- `magnet: Magnet` - Magnet data\n+- `isActive?: boolean` - Active state\n+\n+#### Key Features:\n+- Magnet attachment visualization\n+- Rule configuration interface\n+- Visual connection indicators\n+\n+### AvailableJobsPanel\n+**File**: `src/components/jobs/AvailableJobsPanel.tsx`\n+**Description**: Unscheduled jobs display panel\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- List of available jobs\n+- Job priority indicators\n+- Quick scheduling actions\n+- Drag-and-drop to calendar\n+\n+## Testing and Debug Components\n+\n+### DebugPanel\n+**File**: `src/components/debug/DebugPanel.tsx`\n+**Description**: Development debugging interface\n+\n+#### Props:\n+- `isVisible: boolean` - Panel visibility\n+\n+#### Key Features:\n+- State inspection\n+- Performance metrics\n+- Debug logging controls\n+- Development-only rendering\n+\n+### DatabaseStatus\n+**File**: `src/components/database/DatabaseStatus.tsx`\n+**Description**: Database connection status indicator\n+\n+#### Props: None (uses context)\n+#### Key Features:\n+- Connection status display\n+- Real-time sync indicators\n+- Error state handling\n+- Retry mechanisms\n+\n+## Component Communication Patterns\n+\n+### Context Usage:\n+- **useScheduler()**: Primary data access\n+- **useDragContext()**: Drag-and-drop coordination  \n+- **useMobile()**: Device-specific behavior\n+- **useModal()**: Modal management\n+\n+### Event Flow:\n+1. **User Interaction** → Component Event Handler\n+2. **Optimistic Update** → Local State Change\n+3. **Database Operation** → Service Layer Call\n+4. **Real-time Sync** → Context Update\n+5. **UI Refresh** → Component Re-render\n+\n+### Props vs Context:\n+- **Props**: Component-specific data and configuration\n+- **Context**: Shared application state and actions\n+- **Local State**: Transient UI state (hover, focus, etc.)\n+\n+### Performance Optimizations:\n+- **React.memo()**: Prevent unnecessary re-renders\n+- **useMemo()**: Expensive calculations\n+- **useCallback()**: Stable function references\n+- **Virtual scrolling**: Large resource lists\n\\ No newline at end of file\ndiff --git a/package.json b/package.json\nindex 42287d2..378b81b 100644\n--- a/package.json\n+++ b/package.json\n@@ -29,6 +29,7 @@\n     \"docs:watch\": \"node scripts/generate-docs.cjs --watch\",\n     \"docs:api\": \"typedoc\",\n     \"docs:build\": \"npm run docs:generate && npm run docs:api\",\n+    \"docs:ai-context\": \"node scripts/update-ai-context.js\",\n     \"commit\": \"node scripts/auto-commit.js\",\n     \"save\": \"node scripts/quick-save.js\",\n     \"qs\": \"node scripts/quick-save.js\",\n@@ -38,6 +39,18 @@\n     \"claude:reset\": \"node scripts/claude-reset.js\",\n     \"claude:history\": \"node scripts/claude-history.js\",\n     \"setup:claude\": \"node scripts/setup-claude.js\",\n+    \"ai:context\": \"node scripts/ai-context-agent.js\",\n+    \"ai:context:verbose\": \"node scripts/ai-context-agent.js --verbose\",\n+    \"ai:context:watch\": \"node scripts/ai-context-agent.js --watch\",\n+    \"ai:context:analyze\": \"node scripts/ai-context-agent.js --analyze --verbose\",\n+    \"claude:resume\": \"node scripts/claude-resume.js\",\n+    \"claude:session\": \"node scripts/claude-session.js\",\n+    \"migration:check\": \"node scripts/check-migration.js\",\n+    \"migration:test\": \"node scripts/test-migration.js\",\n+    \"docs:export\": \"node scripts/export-docs-system.cjs\",\n+    \"ai:generate\": \"node scripts/generate-ai-context.js\",\n+    \"claude:update\": \"node scripts/update-claude-md.js\",\n+    \"claude:memory\": \"node scripts/update-claude-memory.cjs\",\n     \"prepare\": \"husky\"\n   },\n   \"dependencies\": {\ndiff --git a/scripts/claude-handoff.js b/scripts/claude-handoff.js\nindex 684699d..e7b38c0 100644\n--- a/scripts/claude-handoff.js\n+++ b/scripts/claude-handoff.js\n@@ -461,6 +461,7 @@ async function main() {\n   }\n }\n \n-if (import.meta.url === `file://${process.argv[1]}`) {\n+// Check if this script is being run directly\n+if (process.argv[1] && process.argv[1].endsWith('claude-handoff.js')) {\n   main();\n }\n\\ No newline at end of file",
      "lastCommit": "e477a85 fix: enhance available jobs panel visibility and sizing"
    },
    "conversationContext": {
      "keyDecisions": [
        "Don't remove 'unused' variables - many are used in JSX conditionally",
        "Use fixed_migration.sql not original migration due to duplicate column error",
        "Focus on critical test failures first before ESLint cleanup",
        "ResourceCard crash was due to missing null check on assignments filter",
        "JobRow tests failing due to missing getMagnetInteractionRule mock in context"
      ],
      "userPreferences": [
        "User wants comprehensive analysis and context",
        "User prefers to see patterns and root causes",
        "User is cautious about removing code that might be used later",
        "User wants to understand the 'why' behind changes"
      ],
      "importantContext": [
        "Database already has schedule_date column (partial migration applied)",
        "RLS policies are blocking integration tests",
        "ESLint errors are mostly unused vars and 'any' types (lower priority)",
        "Test failures are clustered - fix root causes for maximum impact"
      ],
      "customNotes": "No additional notes provided"
    },
    "stateComparison": {
      "tests": {
        "previous": "0/0",
        "current": "0/0",
        "trend": "↗️"
      },
      "lint": {
        "previous": 534,
        "current": 534,
        "trend": "↗️"
      }
    }
  }
}